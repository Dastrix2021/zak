/*
 * Omega.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.OmegaAPIAreasPublicModelsPublicModel;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsBasketMissingItems;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsAddProductListParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsAddToBasketParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsRemoveProductParametersRequest;
import io.swagger.client.model.OmegaCommonModelsResponses;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PublicBasketApi {
    private ApiClient apiClient;

    public PublicBasketApi() {
        this(Configuration.getDefaultApiClient());
    }

    public PublicBasketApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for publicBasketAddProduct
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicBasketAddProductCall(OmegaAPIAreasPublicModelsRequestModelsAddToBasketParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/basket/addProduct";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicBasketAddProductValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsAddToBasketParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicBasketAddProduct(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicBasketAddProductCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Добавляет или увеличивает(уменьшает) количество товаров в корзине и возвращает новую корзину.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/basket/addProduct\&quot; -d \&quot;  {      \&quot;ProductId\&quot;: -1006978,      \&quot;Count\&quot;: 1,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct publicBasketAddProduct(OmegaAPIAreasPublicModelsRequestModelsAddToBasketParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct> resp = publicBasketAddProductWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Добавляет или увеличивает(уменьшает) количество товаров в корзине и возвращает новую корзину.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/basket/addProduct\&quot; -d \&quot;  {      \&quot;ProductId\&quot;: -1006978,      \&quot;Count\&quot;: 1,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct> publicBasketAddProductWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsAddToBasketParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicBasketAddProductValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Добавляет или увеличивает(уменьшает) количество товаров в корзине и возвращает новую корзину. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/basket/addProduct\&quot; -d \&quot;  {      \&quot;ProductId\&quot;: -1006978,      \&quot;Count\&quot;: 1,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicBasketAddProductAsync(OmegaAPIAreasPublicModelsRequestModelsAddToBasketParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicBasketAddProductValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicBasketAddProductList
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicBasketAddProductListCall(OmegaAPIAreasPublicModelsRequestModelsAddProductListParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/basket/addProductList";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicBasketAddProductListValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsAddProductListParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicBasketAddProductList(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicBasketAddProductListCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Добавляет список товаров в корзину.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/basket/addProductList\&quot; -d \&quot;  {      \&quot;ProductList\&quot;: [{\&quot;ProductId\&quot;: -1006978, Count: 1}]      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsBasketMissingItems
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsBasketMissingItems publicBasketAddProductList(OmegaAPIAreasPublicModelsRequestModelsAddProductListParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsBasketMissingItems> resp = publicBasketAddProductListWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Добавляет список товаров в корзину.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/basket/addProductList\&quot; -d \&quot;  {      \&quot;ProductList\&quot;: [{\&quot;ProductId\&quot;: -1006978, Count: 1}]      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsBasketMissingItems&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsBasketMissingItems> publicBasketAddProductListWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsAddProductListParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicBasketAddProductListValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsBasketMissingItems>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Добавляет список товаров в корзину. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/basket/addProductList\&quot; -d \&quot;  {      \&quot;ProductList\&quot;: [{\&quot;ProductId\&quot;: -1006978, Count: 1}]      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicBasketAddProductListAsync(OmegaAPIAreasPublicModelsRequestModelsAddProductListParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsBasketMissingItems> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicBasketAddProductListValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsBasketMissingItems>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicBasketClearBasket
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicBasketClearBasketCall(OmegaAPIAreasPublicModelsPublicModel model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/basket/clear";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicBasketClearBasketValidateBeforeCall(OmegaAPIAreasPublicModelsPublicModel model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicBasketClearBasket(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicBasketClearBasketCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Очищает все товары в корзине.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/basket/clear\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return OmegaCommonModelsResponses
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaCommonModelsResponses publicBasketClearBasket(OmegaAPIAreasPublicModelsPublicModel model) throws ApiException {
        ApiResponse<OmegaCommonModelsResponses> resp = publicBasketClearBasketWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Очищает все товары в корзине.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/basket/clear\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaCommonModelsResponses&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaCommonModelsResponses> publicBasketClearBasketWithHttpInfo(OmegaAPIAreasPublicModelsPublicModel model) throws ApiException {
        com.squareup.okhttp.Call call = publicBasketClearBasketValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaCommonModelsResponses>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Очищает все товары в корзине. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/basket/clear\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicBasketClearBasketAsync(OmegaAPIAreasPublicModelsPublicModel model, final ApiCallback<OmegaCommonModelsResponses> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicBasketClearBasketValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaCommonModelsResponses>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicBasketGetBasket
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicBasketGetBasketCall(OmegaAPIAreasPublicModelsPublicModel model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/basket/getBasket";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicBasketGetBasketValidateBeforeCall(OmegaAPIAreasPublicModelsPublicModel model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicBasketGetBasket(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicBasketGetBasketCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает список товаров из корзины.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/basket/getBasket\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct publicBasketGetBasket(OmegaAPIAreasPublicModelsPublicModel model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct> resp = publicBasketGetBasketWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает список товаров из корзины.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/basket/getBasket\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct> publicBasketGetBasketWithHttpInfo(OmegaAPIAreasPublicModelsPublicModel model) throws ApiException {
        com.squareup.okhttp.Call call = publicBasketGetBasketValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает список товаров из корзины. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/basket/getBasket\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicBasketGetBasketAsync(OmegaAPIAreasPublicModelsPublicModel model, final ApiCallback<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicBasketGetBasketValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicBasketRemoveProduct
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicBasketRemoveProductCall(OmegaAPIAreasPublicModelsRequestModelsRemoveProductParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/basket/removeProductFromBasket";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicBasketRemoveProductValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsRemoveProductParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicBasketRemoveProduct(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicBasketRemoveProductCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Удаляет выбранный товар из корзины.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/basket/removeProductFromBasket\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ProductId\&quot;: -1006978  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct publicBasketRemoveProduct(OmegaAPIAreasPublicModelsRequestModelsRemoveProductParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct> resp = publicBasketRemoveProductWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Удаляет выбранный товар из корзины.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/basket/removeProductFromBasket\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ProductId\&quot;: -1006978  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct> publicBasketRemoveProductWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsRemoveProductParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicBasketRemoveProductValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Удаляет выбранный товар из корзины. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/basket/removeProductFromBasket\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ProductId\&quot;: -1006978  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicBasketRemoveProductAsync(OmegaAPIAreasPublicModelsRequestModelsRemoveProductParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicBasketRemoveProductValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsPublicBasketProduct>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}

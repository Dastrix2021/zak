/*
 * Omega.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.OmegaAPIAreasPublicModelsPublicModel;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsClaimPublicClaimData;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsReponsesClaimReponse;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableClaimKind;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicClaimPhoto;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicContactForClaims;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIModelsKeyValueModel;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableSystemString;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemDouble;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsClaimCheckClaimParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsClaimClaimDiscountParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsClaimCreateClaimParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsClaimDownloadRefundDocumentsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsClaimGetAddressesParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsClaimGetClaimsListParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsClaimGetKindClaimsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsClaimUploadClaimPhotoParametersRequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PublicClaimsApi {
    private ApiClient apiClient;

    public PublicClaimsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public PublicClaimsApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for publicClaimsCheckClaimKind
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicClaimsCheckClaimKindCall(OmegaAPIAreasPublicModelsRequestModelsClaimCheckClaimParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/claims/checkClaimKind";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicClaimsCheckClaimKindValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsClaimCheckClaimParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicClaimsCheckClaimKind(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicClaimsCheckClaimKindCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Проверяет возможность создания претензии.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/checkClaimKind\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;225da8af-20a7-11e9-80cc-94f128aa9b4c\&quot;,      \&quot;KindId\&quot;: \&quot;БракУпаковки\&quot;,      \&quot;ProductId\&quot;:\&quot;f1eae727-9cfe-11e7-9628-e839351df20c\&quot;  }\&quot;  Использовать данный метод для каждого товара, на который собираються оформить претензию
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableSystemString
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableSystemString publicClaimsCheckClaimKind(OmegaAPIAreasPublicModelsRequestModelsClaimCheckClaimParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableSystemString> resp = publicClaimsCheckClaimKindWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Проверяет возможность создания претензии.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/checkClaimKind\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;225da8af-20a7-11e9-80cc-94f128aa9b4c\&quot;,      \&quot;KindId\&quot;: \&quot;БракУпаковки\&quot;,      \&quot;ProductId\&quot;:\&quot;f1eae727-9cfe-11e7-9628-e839351df20c\&quot;  }\&quot;  Использовать данный метод для каждого товара, на который собираються оформить претензию
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableSystemString&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableSystemString> publicClaimsCheckClaimKindWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsClaimCheckClaimParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicClaimsCheckClaimKindValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableSystemString>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Проверяет возможность создания претензии. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/checkClaimKind\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;225da8af-20a7-11e9-80cc-94f128aa9b4c\&quot;,      \&quot;KindId\&quot;: \&quot;БракУпаковки\&quot;,      \&quot;ProductId\&quot;:\&quot;f1eae727-9cfe-11e7-9628-e839351df20c\&quot;  }\&quot;  Использовать данный метод для каждого товара, на который собираються оформить претензию
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicClaimsCheckClaimKindAsync(OmegaAPIAreasPublicModelsRequestModelsClaimCheckClaimParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableSystemString> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicClaimsCheckClaimKindValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableSystemString>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicClaimsCreateClaim
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicClaimsCreateClaimCall(OmegaAPIAreasPublicModelsRequestModelsClaimCreateClaimParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/claims/createClaim";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicClaimsCreateClaimValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsClaimCreateClaimParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicClaimsCreateClaim(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicClaimsCreateClaimCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Создает претензию по заданным параметрам.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/createClaim\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;  Тип претензии скрытый брак может иметь дополнительные поля тип объекта BaseClaimProduct - поля Vin (строка), CarMark (строка), CarModel (строка), YearVehicle (1000-9999)  Тип претензии явный брак может иметь дополнительные поля тип объекта BaseClaimProduct - поля ReadyForDiscount (0-1)
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsReponsesClaimReponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsReponsesClaimReponse publicClaimsCreateClaim(OmegaAPIAreasPublicModelsRequestModelsClaimCreateClaimParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsReponsesClaimReponse> resp = publicClaimsCreateClaimWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Создает претензию по заданным параметрам.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/createClaim\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;  Тип претензии скрытый брак может иметь дополнительные поля тип объекта BaseClaimProduct - поля Vin (строка), CarMark (строка), CarModel (строка), YearVehicle (1000-9999)  Тип претензии явный брак может иметь дополнительные поля тип объекта BaseClaimProduct - поля ReadyForDiscount (0-1)
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsReponsesClaimReponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsReponsesClaimReponse> publicClaimsCreateClaimWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsClaimCreateClaimParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicClaimsCreateClaimValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsReponsesClaimReponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Создает претензию по заданным параметрам. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/createClaim\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;  Тип претензии скрытый брак может иметь дополнительные поля тип объекта BaseClaimProduct - поля Vin (строка), CarMark (строка), CarModel (строка), YearVehicle (1000-9999)  Тип претензии явный брак может иметь дополнительные поля тип объекта BaseClaimProduct - поля ReadyForDiscount (0-1)
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicClaimsCreateClaimAsync(OmegaAPIAreasPublicModelsRequestModelsClaimCreateClaimParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsReponsesClaimReponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicClaimsCreateClaimValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsReponsesClaimReponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicClaimsDownloadRefundDocuments
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicClaimsDownloadRefundDocumentsCall(OmegaAPIAreasPublicModelsRequestModelsClaimDownloadRefundDocumentsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/claims/downloadRefundDocuments";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicClaimsDownloadRefundDocumentsValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsClaimDownloadRefundDocumentsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicClaimsDownloadRefundDocuments(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicClaimsDownloadRefundDocumentsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Загрузить документы на возврат. Формат файла архив .ZIP
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/downloadRefundDocuments\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return byte[]
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public byte[] publicClaimsDownloadRefundDocuments(OmegaAPIAreasPublicModelsRequestModelsClaimDownloadRefundDocumentsParametersRequest model) throws ApiException {
        ApiResponse<byte[]> resp = publicClaimsDownloadRefundDocumentsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Загрузить документы на возврат. Формат файла архив .ZIP
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/downloadRefundDocuments\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;byte[]&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<byte[]> publicClaimsDownloadRefundDocumentsWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsClaimDownloadRefundDocumentsParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicClaimsDownloadRefundDocumentsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<byte[]>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Загрузить документы на возврат. Формат файла архив .ZIP (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/downloadRefundDocuments\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicClaimsDownloadRefundDocumentsAsync(OmegaAPIAreasPublicModelsRequestModelsClaimDownloadRefundDocumentsParametersRequest model, final ApiCallback<byte[]> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicClaimsDownloadRefundDocumentsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<byte[]>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicClaimsGetAddresses
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicClaimsGetAddressesCall(OmegaAPIAreasPublicModelsRequestModelsClaimGetAddressesParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/claims/getAddresses";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicClaimsGetAddressesValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsClaimGetAddressesParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicClaimsGetAddresses(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicClaimsGetAddressesCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает список адресов.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getAddresses\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;Kind\&quot;: 0  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIModelsKeyValueModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIModelsKeyValueModel publicClaimsGetAddresses(OmegaAPIAreasPublicModelsRequestModelsClaimGetAddressesParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIModelsKeyValueModel> resp = publicClaimsGetAddressesWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает список адресов.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getAddresses\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;Kind\&quot;: 0  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIModelsKeyValueModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIModelsKeyValueModel> publicClaimsGetAddressesWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsClaimGetAddressesParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicClaimsGetAddressesValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIModelsKeyValueModel>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает список адресов. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getAddresses\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;Kind\&quot;: 0  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicClaimsGetAddressesAsync(OmegaAPIAreasPublicModelsRequestModelsClaimGetAddressesParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIModelsKeyValueModel> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicClaimsGetAddressesValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIModelsKeyValueModel>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicClaimsGetClaimsList
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicClaimsGetClaimsListCall(OmegaAPIAreasPublicModelsRequestModelsClaimGetClaimsListParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/claims/getClaimsList";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicClaimsGetClaimsListValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsClaimGetClaimsListParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicClaimsGetClaimsList(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicClaimsGetClaimsListCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает журнал претензий.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getClaimsList\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsClaimPublicClaimData
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsClaimPublicClaimData publicClaimsGetClaimsList(OmegaAPIAreasPublicModelsRequestModelsClaimGetClaimsListParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsClaimPublicClaimData> resp = publicClaimsGetClaimsListWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает журнал претензий.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getClaimsList\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsClaimPublicClaimData&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsClaimPublicClaimData> publicClaimsGetClaimsListWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsClaimGetClaimsListParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicClaimsGetClaimsListValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsClaimPublicClaimData>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает журнал претензий. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getClaimsList\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicClaimsGetClaimsListAsync(OmegaAPIAreasPublicModelsRequestModelsClaimGetClaimsListParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsClaimPublicClaimData> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicClaimsGetClaimsListValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsClaimPublicClaimData>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicClaimsGetContacts
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicClaimsGetContactsCall(OmegaAPIAreasPublicModelsPublicModel model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/claims/getContacts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicClaimsGetContactsValidateBeforeCall(OmegaAPIAreasPublicModelsPublicModel model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicClaimsGetContacts(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicClaimsGetContactsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает список контактных лиц.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getContacts\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicContactForClaims
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicContactForClaims publicClaimsGetContacts(OmegaAPIAreasPublicModelsPublicModel model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicContactForClaims> resp = publicClaimsGetContactsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает список контактных лиц.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getContacts\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicContactForClaims&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicContactForClaims> publicClaimsGetContactsWithHttpInfo(OmegaAPIAreasPublicModelsPublicModel model) throws ApiException {
        com.squareup.okhttp.Call call = publicClaimsGetContactsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicContactForClaims>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает список контактных лиц. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getContacts\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicClaimsGetContactsAsync(OmegaAPIAreasPublicModelsPublicModel model, final ApiCallback<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicContactForClaims> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicClaimsGetContactsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicContactForClaims>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicClaimsGetDiscount
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicClaimsGetDiscountCall(OmegaAPIAreasPublicModelsRequestModelsClaimClaimDiscountParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/claims/getDiscount";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicClaimsGetDiscountValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsClaimClaimDiscountParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicClaimsGetDiscount(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicClaimsGetDiscountCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает возможную скидку по товару в РН.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getDiscount\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ProductId\&quot;:\&quot;f1eae727-9cfe-11e7-9628-e839351df20c\&quot;,      \&quot;DocId\&quot;: \&quot;9d1267d3-9c5b-11e6-b23a-80c16e6b55ee\&quot;,      \&quot;TypeId\&quot;: \&quot;type\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemDouble
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemDouble publicClaimsGetDiscount(OmegaAPIAreasPublicModelsRequestModelsClaimClaimDiscountParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemDouble> resp = publicClaimsGetDiscountWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает возможную скидку по товару в РН.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getDiscount\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ProductId\&quot;:\&quot;f1eae727-9cfe-11e7-9628-e839351df20c\&quot;,      \&quot;DocId\&quot;: \&quot;9d1267d3-9c5b-11e6-b23a-80c16e6b55ee\&quot;,      \&quot;TypeId\&quot;: \&quot;type\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemDouble&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemDouble> publicClaimsGetDiscountWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsClaimClaimDiscountParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicClaimsGetDiscountValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemDouble>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает возможную скидку по товару в РН. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getDiscount\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ProductId\&quot;:\&quot;f1eae727-9cfe-11e7-9628-e839351df20c\&quot;,      \&quot;DocId\&quot;: \&quot;9d1267d3-9c5b-11e6-b23a-80c16e6b55ee\&quot;,      \&quot;TypeId\&quot;: \&quot;type\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicClaimsGetDiscountAsync(OmegaAPIAreasPublicModelsRequestModelsClaimClaimDiscountParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemDouble> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicClaimsGetDiscountValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemDouble>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicClaimsGetKindClaims
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicClaimsGetKindClaimsCall(OmegaAPIAreasPublicModelsRequestModelsClaimGetKindClaimsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/claims/getKindClaims";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicClaimsGetKindClaimsValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsClaimGetKindClaimsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicClaimsGetKindClaims(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicClaimsGetKindClaimsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает список причин для возврата.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getKindClaims\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ProductId\&quot;:\&quot;f1eae727-9cfe-11e7-9628-e839351df20c\&quot;,      \&quot;DocId\&quot;: \&quot;9d1267d3-9c5b-11e6-b23a-80c16e6b55ee\&quot;  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableClaimKind
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableClaimKind publicClaimsGetKindClaims(OmegaAPIAreasPublicModelsRequestModelsClaimGetKindClaimsParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableClaimKind> resp = publicClaimsGetKindClaimsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает список причин для возврата.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getKindClaims\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ProductId\&quot;:\&quot;f1eae727-9cfe-11e7-9628-e839351df20c\&quot;,      \&quot;DocId\&quot;: \&quot;9d1267d3-9c5b-11e6-b23a-80c16e6b55ee\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableClaimKind&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableClaimKind> publicClaimsGetKindClaimsWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsClaimGetKindClaimsParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicClaimsGetKindClaimsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableClaimKind>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает список причин для возврата. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getKindClaims\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ProductId\&quot;:\&quot;f1eae727-9cfe-11e7-9628-e839351df20c\&quot;,      \&quot;DocId\&quot;: \&quot;9d1267d3-9c5b-11e6-b23a-80c16e6b55ee\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicClaimsGetKindClaimsAsync(OmegaAPIAreasPublicModelsRequestModelsClaimGetKindClaimsParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableClaimKind> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicClaimsGetKindClaimsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableClaimKind>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicClaimsUploadPhoto
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicClaimsUploadPhotoCall(OmegaAPIAreasPublicModelsRequestModelsClaimUploadClaimPhotoParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/claims/uploadPhoto";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicClaimsUploadPhotoValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsClaimUploadClaimPhotoParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicClaimsUploadPhoto(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicClaimsUploadPhotoCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Загружает фото, формат изображения должен быть JPEG (.jpg).
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/uploadPhoto\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ProductId\&quot;: \&quot;\&quot;,      \&quot;Data\&quot;: \&quot;/SAFsDFsdaf\&quot;,      \&quot;FileName\&quot;: \&quot;Test.jpg\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicClaimPhoto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicClaimPhoto publicClaimsUploadPhoto(OmegaAPIAreasPublicModelsRequestModelsClaimUploadClaimPhotoParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicClaimPhoto> resp = publicClaimsUploadPhotoWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Загружает фото, формат изображения должен быть JPEG (.jpg).
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/uploadPhoto\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ProductId\&quot;: \&quot;\&quot;,      \&quot;Data\&quot;: \&quot;/SAFsDFsdaf\&quot;,      \&quot;FileName\&quot;: \&quot;Test.jpg\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicClaimPhoto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicClaimPhoto> publicClaimsUploadPhotoWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsClaimUploadClaimPhotoParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicClaimsUploadPhotoValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicClaimPhoto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Загружает фото, формат изображения должен быть JPEG (.jpg). (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/uploadPhoto\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ProductId\&quot;: \&quot;\&quot;,      \&quot;Data\&quot;: \&quot;/SAFsDFsdaf\&quot;,      \&quot;FileName\&quot;: \&quot;Test.jpg\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicClaimsUploadPhotoAsync(OmegaAPIAreasPublicModelsRequestModelsClaimUploadClaimPhotoParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicClaimPhoto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicClaimsUploadPhotoValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicClaimPhoto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}

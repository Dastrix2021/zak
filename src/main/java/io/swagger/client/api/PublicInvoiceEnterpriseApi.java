/*
 * Omega.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoicePagedInvoices;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoicePublicContract;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoicePublicContractSRO;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoicePublicCustomer;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoicePublicInvoice;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoicePublicReponseInvoice;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoicePublicWarehouse;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryAddressSettings;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryTownsSettings;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierShipmentSettings;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPlainPublicPlainShipmentSettings;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPublicShipmentType;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoiceSettingsShipmentSelfDeliveryPublicSelfDeliveryShipmentSettings;
import io.swagger.client.model.OmegaAPIAreasPublicModelsPublicModel;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsGetListRestsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceAddInvoiceParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceAddProductInvoiceParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceCodInvoiceParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceDeleteInvoiceParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceDeleteItemFromInvoiceParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceGetAddressCourierDeliveryRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceGetContractSroParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceGetContractsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceGetPagedInvoicesParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceGetTownCourierDeliveryRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceGetWarehousesParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceMoveProductsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceReadyInvoiceParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceReserveInvoiceNoteParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceReserveInvoiceParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceSetContractParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceSetCourierShipmentParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceSetCustomerParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceSetPlainShipmentParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceSetSelfDeliveryShipmentParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceSetWarehouseParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceUpdateProductsQuantityParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PublicInvoiceEnterpriseApi {
    private ApiClient apiClient;

    public PublicInvoiceEnterpriseApi() {
        this(Configuration.getDefaultApiClient());
    }

    public PublicInvoiceEnterpriseApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for publicInvoiceEnterpriseAddInvoice
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseAddInvoiceCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceAddInvoiceParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/addInvoice";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseAddInvoiceValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceAddInvoiceParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseAddInvoice(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseAddInvoiceCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Сохраняет новый счёт с стандартными настройками, и переносит в него товары из корзины.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/addInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePublicReponseInvoice
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePublicReponseInvoice publicInvoiceEnterpriseAddInvoice(OmegaAPIAreasPublicModelsRequestModelsInvoiceAddInvoiceParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicReponseInvoice> resp = publicInvoiceEnterpriseAddInvoiceWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Сохраняет новый счёт с стандартными настройками, и переносит в него товары из корзины.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/addInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePublicReponseInvoice&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicReponseInvoice> publicInvoiceEnterpriseAddInvoiceWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceAddInvoiceParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseAddInvoiceValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicReponseInvoice>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Сохраняет новый счёт с стандартными настройками, и переносит в него товары из корзины. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/addInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseAddInvoiceAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceAddInvoiceParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePublicReponseInvoice> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseAddInvoiceValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicReponseInvoice>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseAddProductToInvoice
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseAddProductToInvoiceCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceAddProductInvoiceParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/addProductToInvoice";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseAddProductToInvoiceValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceAddProductInvoiceParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseAddProductToInvoice(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseAddProductToInvoiceCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Добавляет товары в указанный счет.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/addProductToInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;ProdId\&quot;: -84669,      \&quot;Count\&quot;: 1,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePublicInvoice
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePublicInvoice publicInvoiceEnterpriseAddProductToInvoice(OmegaAPIAreasPublicModelsRequestModelsInvoiceAddProductInvoiceParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> resp = publicInvoiceEnterpriseAddProductToInvoiceWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Добавляет товары в указанный счет.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/addProductToInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;ProdId\&quot;: -84669,      \&quot;Count\&quot;: 1,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePublicInvoice&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> publicInvoiceEnterpriseAddProductToInvoiceWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceAddProductInvoiceParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseAddProductToInvoiceValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Добавляет товары в указанный счет. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/addProductToInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;ProdId\&quot;: -84669,      \&quot;Count\&quot;: 1,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseAddProductToInvoiceAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceAddProductInvoiceParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePublicInvoice> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseAddProductToInvoiceValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseDeleteInvoice
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseDeleteInvoiceCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceDeleteInvoiceParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/deleteInvoice";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseDeleteInvoiceValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceDeleteInvoiceParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseDeleteInvoice(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseDeleteInvoiceCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Удаляет счет.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/deleteInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;  }\&quot;
     * @param model  (required)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public String publicInvoiceEnterpriseDeleteInvoice(OmegaAPIAreasPublicModelsRequestModelsInvoiceDeleteInvoiceParametersRequest model) throws ApiException {
        ApiResponse<String> resp = publicInvoiceEnterpriseDeleteInvoiceWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Удаляет счет.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/deleteInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<String> publicInvoiceEnterpriseDeleteInvoiceWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceDeleteInvoiceParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseDeleteInvoiceValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Удаляет счет. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/deleteInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseDeleteInvoiceAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceDeleteInvoiceParametersRequest model, final ApiCallback<String> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseDeleteInvoiceValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseDeleteItemFromInvoice
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseDeleteItemFromInvoiceCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceDeleteItemFromInvoiceParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/deleteItemFromInvoice";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseDeleteItemFromInvoiceValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceDeleteItemFromInvoiceParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseDeleteItemFromInvoice(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseDeleteItemFromInvoiceCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Удаляет товар из счета
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/deleteItemFromInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePublicInvoice
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePublicInvoice publicInvoiceEnterpriseDeleteItemFromInvoice(OmegaAPIAreasPublicModelsRequestModelsInvoiceDeleteItemFromInvoiceParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> resp = publicInvoiceEnterpriseDeleteItemFromInvoiceWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Удаляет товар из счета
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/deleteItemFromInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePublicInvoice&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> publicInvoiceEnterpriseDeleteItemFromInvoiceWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceDeleteItemFromInvoiceParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseDeleteItemFromInvoiceValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Удаляет товар из счета (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/deleteItemFromInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseDeleteItemFromInvoiceAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceDeleteItemFromInvoiceParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePublicInvoice> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseDeleteItemFromInvoiceValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseGetBasketRests
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetBasketRestsCall(OmegaAPIAreasPublicModelsPublicModel model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/getBasketRests";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseGetBasketRestsValidateBeforeCall(OmegaAPIAreasPublicModelsPublicModel model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseGetBasketRests(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetBasketRestsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает список доступных складов с остатками по товарам из корзины.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getBasketRests\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsInvoicePublicWarehouse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsInvoicePublicWarehouse> publicInvoiceEnterpriseGetBasketRests(OmegaAPIAreasPublicModelsPublicModel model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsInvoicePublicWarehouse>> resp = publicInvoiceEnterpriseGetBasketRestsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает список доступных складов с остатками по товарам из корзины.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getBasketRests\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsInvoicePublicWarehouse&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsInvoicePublicWarehouse>> publicInvoiceEnterpriseGetBasketRestsWithHttpInfo(OmegaAPIAreasPublicModelsPublicModel model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetBasketRestsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsInvoicePublicWarehouse>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает список доступных складов с остатками по товарам из корзины. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getBasketRests\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetBasketRestsAsync(OmegaAPIAreasPublicModelsPublicModel model, final ApiCallback<List<OmegaAPIAreasPublicModelsInvoicePublicWarehouse>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetBasketRestsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsInvoicePublicWarehouse>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseGetContractSRO
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetContractSROCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetContractSroParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/getContractSRO";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseGetContractSROValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetContractSroParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseGetContractSRO(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetContractSROCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает сумму разрешенной отгрузки.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getContractSRO\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePublicContractSRO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePublicContractSRO publicInvoiceEnterpriseGetContractSRO(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetContractSroParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicContractSRO> resp = publicInvoiceEnterpriseGetContractSROWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает сумму разрешенной отгрузки.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getContractSRO\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePublicContractSRO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicContractSRO> publicInvoiceEnterpriseGetContractSROWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetContractSroParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetContractSROValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicContractSRO>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает сумму разрешенной отгрузки. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getContractSRO\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetContractSROAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetContractSroParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePublicContractSRO> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetContractSROValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicContractSRO>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseGetContracts
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetContractsCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetContractsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/getContracts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseGetContractsValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetContractsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseGetContracts(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetContractsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает список договоров клиента.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getContracts\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;CustomerId\&quot;: \&quot;5728e3fb-486f-11e6-80c3-005056a817fa\&quot;,  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsInvoicePublicContract&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsInvoicePublicContract> publicInvoiceEnterpriseGetContracts(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetContractsParametersRequest model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsInvoicePublicContract>> resp = publicInvoiceEnterpriseGetContractsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает список договоров клиента.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getContracts\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;CustomerId\&quot;: \&quot;5728e3fb-486f-11e6-80c3-005056a817fa\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsInvoicePublicContract&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsInvoicePublicContract>> publicInvoiceEnterpriseGetContractsWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetContractsParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetContractsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsInvoicePublicContract>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает список договоров клиента. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getContracts\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;CustomerId\&quot;: \&quot;5728e3fb-486f-11e6-80c3-005056a817fa\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetContractsAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetContractsParametersRequest model, final ApiCallback<List<OmegaAPIAreasPublicModelsInvoicePublicContract>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetContractsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsInvoicePublicContract>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseGetCourierAddresses
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetCourierAddressesCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetAddressCourierDeliveryRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/getCourierAddresses";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseGetCourierAddressesValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetAddressCourierDeliveryRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseGetCourierAddresses(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetCourierAddressesCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает список адресов отделения для определённого сервиса \&quot;Курьерской доставки\&quot;.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getCourierAddresses\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,      \&quot;DeliveryId\&quot;: \&quot;a0ed30f9-6fac-11e6-80c9-005056a83d22\&quot;,      \&quot;TownId\&quot;: \&quot;d4cf8a25-b59a-11e6-b23a-80c16e6b54ee\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryAddressSettings
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryAddressSettings publicInvoiceEnterpriseGetCourierAddresses(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetAddressCourierDeliveryRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryAddressSettings> resp = publicInvoiceEnterpriseGetCourierAddressesWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает список адресов отделения для определённого сервиса \&quot;Курьерской доставки\&quot;.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getCourierAddresses\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,      \&quot;DeliveryId\&quot;: \&quot;a0ed30f9-6fac-11e6-80c9-005056a83d22\&quot;,      \&quot;TownId\&quot;: \&quot;d4cf8a25-b59a-11e6-b23a-80c16e6b54ee\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryAddressSettings&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryAddressSettings> publicInvoiceEnterpriseGetCourierAddressesWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetAddressCourierDeliveryRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetCourierAddressesValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryAddressSettings>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает список адресов отделения для определённого сервиса \&quot;Курьерской доставки\&quot;. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getCourierAddresses\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,      \&quot;DeliveryId\&quot;: \&quot;a0ed30f9-6fac-11e6-80c9-005056a83d22\&quot;,      \&quot;TownId\&quot;: \&quot;d4cf8a25-b59a-11e6-b23a-80c16e6b54ee\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetCourierAddressesAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetAddressCourierDeliveryRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryAddressSettings> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetCourierAddressesValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryAddressSettings>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseGetCourierDeliverySettings
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetCourierDeliverySettingsCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/getCourierDeliverySettings";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseGetCourierDeliverySettingsValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseGetCourierDeliverySettings(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetCourierDeliverySettingsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает настройки для \&quot;Курьерской доставки\&quot;.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getCourierDeliverySettings\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierShipmentSettings
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierShipmentSettings publicInvoiceEnterpriseGetCourierDeliverySettings(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierShipmentSettings> resp = publicInvoiceEnterpriseGetCourierDeliverySettingsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает настройки для \&quot;Курьерской доставки\&quot;.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getCourierDeliverySettings\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierShipmentSettings&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierShipmentSettings> publicInvoiceEnterpriseGetCourierDeliverySettingsWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetCourierDeliverySettingsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierShipmentSettings>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает настройки для \&quot;Курьерской доставки\&quot;. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getCourierDeliverySettings\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetCourierDeliverySettingsAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierShipmentSettings> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetCourierDeliverySettingsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierShipmentSettings>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseGetCourierTowns
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetCourierTownsCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetTownCourierDeliveryRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/getCourierTowns";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseGetCourierTownsValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetTownCourierDeliveryRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseGetCourierTowns(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetCourierTownsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает список городов для определённого сервиса \&quot;Курьерской доставки\&quot;.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getCourierTowns\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,      \&quot;DeliveryId\&quot;: \&quot;a0ed30f9-6fac-11e6-80c9-005056a83d22\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryTownsSettings
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryTownsSettings publicInvoiceEnterpriseGetCourierTowns(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetTownCourierDeliveryRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryTownsSettings> resp = publicInvoiceEnterpriseGetCourierTownsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает список городов для определённого сервиса \&quot;Курьерской доставки\&quot;.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getCourierTowns\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,      \&quot;DeliveryId\&quot;: \&quot;a0ed30f9-6fac-11e6-80c9-005056a83d22\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryTownsSettings&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryTownsSettings> publicInvoiceEnterpriseGetCourierTownsWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetTownCourierDeliveryRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetCourierTownsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryTownsSettings>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает список городов для определённого сервиса \&quot;Курьерской доставки\&quot;. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getCourierTowns\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,      \&quot;DeliveryId\&quot;: \&quot;a0ed30f9-6fac-11e6-80c9-005056a83d22\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetCourierTownsAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetTownCourierDeliveryRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryTownsSettings> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetCourierTownsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryTownsSettings>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseGetCustomers
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetCustomersCall(OmegaAPIAreasPublicModelsPublicModel model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/getCustomers";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseGetCustomersValidateBeforeCall(OmegaAPIAreasPublicModelsPublicModel model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseGetCustomers(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetCustomersCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает список контрагентов доступных клиенту.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getCustomers\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsInvoicePublicCustomer&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsInvoicePublicCustomer> publicInvoiceEnterpriseGetCustomers(OmegaAPIAreasPublicModelsPublicModel model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsInvoicePublicCustomer>> resp = publicInvoiceEnterpriseGetCustomersWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает список контрагентов доступных клиенту.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getCustomers\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsInvoicePublicCustomer&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsInvoicePublicCustomer>> publicInvoiceEnterpriseGetCustomersWithHttpInfo(OmegaAPIAreasPublicModelsPublicModel model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetCustomersValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsInvoicePublicCustomer>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает список контрагентов доступных клиенту. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getCustomers\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetCustomersAsync(OmegaAPIAreasPublicModelsPublicModel model, final ApiCallback<List<OmegaAPIAreasPublicModelsInvoicePublicCustomer>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetCustomersValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsInvoicePublicCustomer>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseGetInvoice
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetInvoiceCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceReserveInvoiceParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/getInvoice";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseGetInvoiceValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceReserveInvoiceParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseGetInvoice(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetInvoiceCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает информацию о счёте.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;:\&quot;test\&quot;  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePublicInvoice
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePublicInvoice publicInvoiceEnterpriseGetInvoice(OmegaAPIAreasPublicModelsRequestModelsInvoiceReserveInvoiceParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> resp = publicInvoiceEnterpriseGetInvoiceWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает информацию о счёте.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;:\&quot;test\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePublicInvoice&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> publicInvoiceEnterpriseGetInvoiceWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceReserveInvoiceParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetInvoiceValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает информацию о счёте. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;:\&quot;test\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetInvoiceAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceReserveInvoiceParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePublicInvoice> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetInvoiceValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseGetListInvoice
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetListInvoiceCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetPagedInvoicesParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/getListInvoice";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseGetListInvoiceValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetPagedInvoicesParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseGetListInvoice(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetListInvoiceCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает список счетов клиента.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getListInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePagedInvoices
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePagedInvoices publicInvoiceEnterpriseGetListInvoice(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetPagedInvoicesParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePagedInvoices> resp = publicInvoiceEnterpriseGetListInvoiceWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает список счетов клиента.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getListInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePagedInvoices&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePagedInvoices> publicInvoiceEnterpriseGetListInvoiceWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetPagedInvoicesParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetListInvoiceValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePagedInvoices>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает список счетов клиента. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getListInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetListInvoiceAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetPagedInvoicesParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePagedInvoices> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetListInvoiceValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePagedInvoices>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseGetPlainInvoiceSettings
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetPlainInvoiceSettingsCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/getPlainSettings";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseGetPlainInvoiceSettingsValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseGetPlainInvoiceSettings(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetPlainInvoiceSettingsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает список доступных настроек для \&quot;Плановой доставки\&quot;.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getPlainSettings\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPlainPublicPlainShipmentSettings
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPlainPublicPlainShipmentSettings publicInvoiceEnterpriseGetPlainInvoiceSettings(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPlainPublicPlainShipmentSettings> resp = publicInvoiceEnterpriseGetPlainInvoiceSettingsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает список доступных настроек для \&quot;Плановой доставки\&quot;.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getPlainSettings\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPlainPublicPlainShipmentSettings&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPlainPublicPlainShipmentSettings> publicInvoiceEnterpriseGetPlainInvoiceSettingsWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetPlainInvoiceSettingsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPlainPublicPlainShipmentSettings>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает список доступных настроек для \&quot;Плановой доставки\&quot;. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getPlainSettings\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetPlainInvoiceSettingsAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPlainPublicPlainShipmentSettings> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetPlainInvoiceSettingsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPlainPublicPlainShipmentSettings>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseGetRests
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetRestsCall(OmegaAPIAreasPublicModelsRequestModelsGetListRestsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/getRests";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseGetRestsValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsGetListRestsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseGetRests(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetRestsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает список складов с остатками по товару.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getRests\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;Rests\&quot;: [-68812],  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice> publicInvoiceEnterpriseGetRests(OmegaAPIAreasPublicModelsRequestModelsGetListRestsParametersRequest model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice>> resp = publicInvoiceEnterpriseGetRestsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает список складов с остатками по товару.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getRests\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;Rests\&quot;: [-68812],  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice>> publicInvoiceEnterpriseGetRestsWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsGetListRestsParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetRestsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает список складов с остатками по товару. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getRests\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;Rests\&quot;: [-68812],  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetRestsAsync(OmegaAPIAreasPublicModelsRequestModelsGetListRestsParametersRequest model, final ApiCallback<List<OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetRestsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseGetSelfDeliverySettings
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetSelfDeliverySettingsCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/getSelfDeliverySettings";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseGetSelfDeliverySettingsValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseGetSelfDeliverySettings(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetSelfDeliverySettingsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает список доступных настроек для \&quot;Самовывоза\&quot;.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getSelfDeliverySettings\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoiceSettingsShipmentSelfDeliveryPublicSelfDeliveryShipmentSettings
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoiceSettingsShipmentSelfDeliveryPublicSelfDeliveryShipmentSettings publicInvoiceEnterpriseGetSelfDeliverySettings(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentSelfDeliveryPublicSelfDeliveryShipmentSettings> resp = publicInvoiceEnterpriseGetSelfDeliverySettingsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает список доступных настроек для \&quot;Самовывоза\&quot;.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getSelfDeliverySettings\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoiceSettingsShipmentSelfDeliveryPublicSelfDeliveryShipmentSettings&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentSelfDeliveryPublicSelfDeliveryShipmentSettings> publicInvoiceEnterpriseGetSelfDeliverySettingsWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetSelfDeliverySettingsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentSelfDeliveryPublicSelfDeliveryShipmentSettings>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает список доступных настроек для \&quot;Самовывоза\&quot;. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getSelfDeliverySettings\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetSelfDeliverySettingsAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentSelfDeliveryPublicSelfDeliveryShipmentSettings> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetSelfDeliverySettingsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentSelfDeliveryPublicSelfDeliveryShipmentSettings>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseGetShipmentTypes
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetShipmentTypesCall(OmegaAPIAreasPublicModelsPublicModel model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/getShipmentTypes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseGetShipmentTypesValidateBeforeCall(OmegaAPIAreasPublicModelsPublicModel model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseGetShipmentTypes(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetShipmentTypesCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает список видов доставки.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getShipmentTypes\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPublicShipmentType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPublicShipmentType> publicInvoiceEnterpriseGetShipmentTypes(OmegaAPIAreasPublicModelsPublicModel model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPublicShipmentType>> resp = publicInvoiceEnterpriseGetShipmentTypesWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает список видов доставки.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getShipmentTypes\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPublicShipmentType&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPublicShipmentType>> publicInvoiceEnterpriseGetShipmentTypesWithHttpInfo(OmegaAPIAreasPublicModelsPublicModel model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetShipmentTypesValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPublicShipmentType>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает список видов доставки. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getShipmentTypes\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetShipmentTypesAsync(OmegaAPIAreasPublicModelsPublicModel model, final ApiCallback<List<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPublicShipmentType>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetShipmentTypesValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPublicShipmentType>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseGetWarehouses
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetWarehousesCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetWarehousesParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/getWarehouses";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseGetWarehousesValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetWarehousesParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseGetWarehouses(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetWarehousesCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Получает список складов доступных контрагенту.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getWarehouses\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;CustomerId\&quot;: \&quot;5728e3fb-486f-11e6-80c3-005056a817fa\&quot;,      \&quot;ShipmentTypeId\&quot;: \&quot;Доставка\&quot;,  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsInvoicePublicWarehouse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsInvoicePublicWarehouse> publicInvoiceEnterpriseGetWarehouses(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetWarehousesParametersRequest model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsInvoicePublicWarehouse>> resp = publicInvoiceEnterpriseGetWarehousesWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Получает список складов доступных контрагенту.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getWarehouses\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;CustomerId\&quot;: \&quot;5728e3fb-486f-11e6-80c3-005056a817fa\&quot;,      \&quot;ShipmentTypeId\&quot;: \&quot;Доставка\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsInvoicePublicWarehouse&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsInvoicePublicWarehouse>> publicInvoiceEnterpriseGetWarehousesWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetWarehousesParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetWarehousesValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsInvoicePublicWarehouse>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Получает список складов доступных контрагенту. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getWarehouses\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;CustomerId\&quot;: \&quot;5728e3fb-486f-11e6-80c3-005056a817fa\&quot;,      \&quot;ShipmentTypeId\&quot;: \&quot;Доставка\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseGetWarehousesAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceGetWarehousesParametersRequest model, final ApiCallback<List<OmegaAPIAreasPublicModelsInvoicePublicWarehouse>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseGetWarehousesValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsInvoicePublicWarehouse>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseMoveProductsFromBasketToInvoice
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseMoveProductsFromBasketToInvoiceCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceMoveProductsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/moveProductsFromBasketToInvoice";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseMoveProductsFromBasketToInvoiceValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceMoveProductsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseMoveProductsFromBasketToInvoice(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseMoveProductsFromBasketToInvoiceCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Перемещает товары с корзины в указанный счет.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/moveProductsFromBasketToInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePublicInvoice
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePublicInvoice publicInvoiceEnterpriseMoveProductsFromBasketToInvoice(OmegaAPIAreasPublicModelsRequestModelsInvoiceMoveProductsParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> resp = publicInvoiceEnterpriseMoveProductsFromBasketToInvoiceWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Перемещает товары с корзины в указанный счет.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/moveProductsFromBasketToInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePublicInvoice&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> publicInvoiceEnterpriseMoveProductsFromBasketToInvoiceWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceMoveProductsParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseMoveProductsFromBasketToInvoiceValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Перемещает товары с корзины в указанный счет. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/moveProductsFromBasketToInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseMoveProductsFromBasketToInvoiceAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceMoveProductsParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePublicInvoice> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseMoveProductsFromBasketToInvoiceValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseReadyInvoice
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseReadyInvoiceCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceReadyInvoiceParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/readyInvoice";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseReadyInvoiceValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceReadyInvoiceParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseReadyInvoice(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseReadyInvoiceCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Отгружает ранее зарезервированный счет.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/readyInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePublicInvoice
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePublicInvoice publicInvoiceEnterpriseReadyInvoice(OmegaAPIAreasPublicModelsRequestModelsInvoiceReadyInvoiceParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> resp = publicInvoiceEnterpriseReadyInvoiceWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Отгружает ранее зарезервированный счет.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/readyInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePublicInvoice&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> publicInvoiceEnterpriseReadyInvoiceWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceReadyInvoiceParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseReadyInvoiceValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Отгружает ранее зарезервированный счет. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/readyInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseReadyInvoiceAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceReadyInvoiceParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePublicInvoice> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseReadyInvoiceValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseReserveInvoice
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseReserveInvoiceCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceReserveInvoiceNoteParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/reserveInvoice";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseReserveInvoiceValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceReserveInvoiceNoteParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseReserveInvoice(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseReserveInvoiceCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Резервирует ранее созданный счёт.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/reserveInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePublicInvoice
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePublicInvoice publicInvoiceEnterpriseReserveInvoice(OmegaAPIAreasPublicModelsRequestModelsInvoiceReserveInvoiceNoteParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> resp = publicInvoiceEnterpriseReserveInvoiceWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Резервирует ранее созданный счёт.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/reserveInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePublicInvoice&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> publicInvoiceEnterpriseReserveInvoiceWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceReserveInvoiceNoteParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseReserveInvoiceValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Резервирует ранее созданный счёт. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/reserveInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseReserveInvoiceAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceReserveInvoiceNoteParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePublicInvoice> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseReserveInvoiceValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseReserveInvoice_0
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseReserveInvoice_0Call(OmegaAPIAreasPublicModelsRequestModelsInvoiceCodInvoiceParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/codInvoice";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseReserveInvoice_0ValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceCodInvoiceParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseReserveInvoice_0(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseReserveInvoice_0Call(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Редактирует ранее созданный счёт в счет с наложенным платежом.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/codInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;SummCod\&quot;: \&quot;0\&quot;,       \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePublicInvoice
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePublicInvoice publicInvoiceEnterpriseReserveInvoice_0(OmegaAPIAreasPublicModelsRequestModelsInvoiceCodInvoiceParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> resp = publicInvoiceEnterpriseReserveInvoice_0WithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Редактирует ранее созданный счёт в счет с наложенным платежом.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/codInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;SummCod\&quot;: \&quot;0\&quot;,       \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePublicInvoice&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> publicInvoiceEnterpriseReserveInvoice_0WithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceCodInvoiceParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseReserveInvoice_0ValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Редактирует ранее созданный счёт в счет с наложенным платежом. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/codInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;SummCod\&quot;: \&quot;0\&quot;,       \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseReserveInvoice_0Async(OmegaAPIAreasPublicModelsRequestModelsInvoiceCodInvoiceParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePublicInvoice> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseReserveInvoice_0ValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseSetCourierShipment
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseSetCourierShipmentCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetCourierShipmentParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/setCourierShipment";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseSetCourierShipmentValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetCourierShipmentParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseSetCourierShipment(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetCourierShipmentCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Выбирает настройки для \&quot;Курьерской доставки\&quot;.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setCourierShipment\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;4422a207-1318-11e9-80c8-80c16e6b54ee\&quot;,      \&quot;DeliveryTypeId\&quot;: \&quot;НаСкладКурьерскойСлужбы\&quot;,      \&quot;ServiceTypeId\&quot;: \&quot;bee7e67e-6fac-11e6-80c9-005056a83d22\&quot;,      \&quot;TownId\&quot;: \&quot;e13e1dbb-b59a-11e6-b23a-80c16e6b54ee\&quot;,      \&quot;AddressId\&quot;: \&quot;c5ab8322-9705-11e8-80c9-94f128aa9b48\&quot;,      \&quot;ContactPersonId\&quot;: \&quot;cee670f1-5596-11e7-9b57-984be1788882\&quot;  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePublicInvoice
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePublicInvoice publicInvoiceEnterpriseSetCourierShipment(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetCourierShipmentParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> resp = publicInvoiceEnterpriseSetCourierShipmentWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Выбирает настройки для \&quot;Курьерской доставки\&quot;.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setCourierShipment\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;4422a207-1318-11e9-80c8-80c16e6b54ee\&quot;,      \&quot;DeliveryTypeId\&quot;: \&quot;НаСкладКурьерскойСлужбы\&quot;,      \&quot;ServiceTypeId\&quot;: \&quot;bee7e67e-6fac-11e6-80c9-005056a83d22\&quot;,      \&quot;TownId\&quot;: \&quot;e13e1dbb-b59a-11e6-b23a-80c16e6b54ee\&quot;,      \&quot;AddressId\&quot;: \&quot;c5ab8322-9705-11e8-80c9-94f128aa9b48\&quot;,      \&quot;ContactPersonId\&quot;: \&quot;cee670f1-5596-11e7-9b57-984be1788882\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePublicInvoice&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> publicInvoiceEnterpriseSetCourierShipmentWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetCourierShipmentParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetCourierShipmentValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Выбирает настройки для \&quot;Курьерской доставки\&quot;. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setCourierShipment\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;4422a207-1318-11e9-80c8-80c16e6b54ee\&quot;,      \&quot;DeliveryTypeId\&quot;: \&quot;НаСкладКурьерскойСлужбы\&quot;,      \&quot;ServiceTypeId\&quot;: \&quot;bee7e67e-6fac-11e6-80c9-005056a83d22\&quot;,      \&quot;TownId\&quot;: \&quot;e13e1dbb-b59a-11e6-b23a-80c16e6b54ee\&quot;,      \&quot;AddressId\&quot;: \&quot;c5ab8322-9705-11e8-80c9-94f128aa9b48\&quot;,      \&quot;ContactPersonId\&quot;: \&quot;cee670f1-5596-11e7-9b57-984be1788882\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseSetCourierShipmentAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetCourierShipmentParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePublicInvoice> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetCourierShipmentValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseSetInvoiceContract
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseSetInvoiceContractCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetContractParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/setInvoiceContract";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseSetInvoiceContractValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetContractParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseSetInvoiceContract(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetInvoiceContractCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Выбирает указанный договор в счете.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setInvoiceContract\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ContractId\&quot;: \&quot;10c9069c-0e82-11e9-80c8-80c16e6b54ee\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePublicInvoice
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePublicInvoice publicInvoiceEnterpriseSetInvoiceContract(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetContractParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> resp = publicInvoiceEnterpriseSetInvoiceContractWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Выбирает указанный договор в счете.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setInvoiceContract\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ContractId\&quot;: \&quot;10c9069c-0e82-11e9-80c8-80c16e6b54ee\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePublicInvoice&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> publicInvoiceEnterpriseSetInvoiceContractWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetContractParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetInvoiceContractValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Выбирает указанный договор в счете. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setInvoiceContract\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ContractId\&quot;: \&quot;10c9069c-0e82-11e9-80c8-80c16e6b54ee\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseSetInvoiceContractAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetContractParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePublicInvoice> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetInvoiceContractValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseSetInvoiceCustomer
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseSetInvoiceCustomerCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetCustomerParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/setInvoiceCustomer";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseSetInvoiceCustomerValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetCustomerParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseSetInvoiceCustomer(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetInvoiceCustomerCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Выбирает указанного контрагента в счете.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setInvoiceCustomer\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;CustomerId\&quot;: \&quot;5728e3fb-486f-11e6-80c3-005056a817fa\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePublicInvoice
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePublicInvoice publicInvoiceEnterpriseSetInvoiceCustomer(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetCustomerParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> resp = publicInvoiceEnterpriseSetInvoiceCustomerWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Выбирает указанного контрагента в счете.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setInvoiceCustomer\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;CustomerId\&quot;: \&quot;5728e3fb-486f-11e6-80c3-005056a817fa\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePublicInvoice&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> publicInvoiceEnterpriseSetInvoiceCustomerWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetCustomerParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetInvoiceCustomerValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Выбирает указанного контрагента в счете. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setInvoiceCustomer\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;CustomerId\&quot;: \&quot;5728e3fb-486f-11e6-80c3-005056a817fa\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseSetInvoiceCustomerAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetCustomerParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePublicInvoice> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetInvoiceCustomerValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseSetInvoiceWarehouse
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseSetInvoiceWarehouseCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetWarehouseParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/setInvoiceWarehouse";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseSetInvoiceWarehouseValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetWarehouseParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseSetInvoiceWarehouse(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetInvoiceWarehouseCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Выбирает указанный склад в счете.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setInvoiceWarehouse\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;WarehouseId\&quot; &#x3D; \&quot;138b4842-483f-11e6-80c3-005056a817fa\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePublicInvoice
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePublicInvoice publicInvoiceEnterpriseSetInvoiceWarehouse(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetWarehouseParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> resp = publicInvoiceEnterpriseSetInvoiceWarehouseWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Выбирает указанный склад в счете.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setInvoiceWarehouse\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;WarehouseId\&quot; &#x3D; \&quot;138b4842-483f-11e6-80c3-005056a817fa\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePublicInvoice&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> publicInvoiceEnterpriseSetInvoiceWarehouseWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetWarehouseParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetInvoiceWarehouseValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Выбирает указанный склад в счете. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setInvoiceWarehouse\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;WarehouseId\&quot; &#x3D; \&quot;138b4842-483f-11e6-80c3-005056a817fa\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseSetInvoiceWarehouseAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetWarehouseParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePublicInvoice> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetInvoiceWarehouseValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseSetPlainShipment
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseSetPlainShipmentCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetPlainShipmentParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/setPlainShipment";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseSetPlainShipmentValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetPlainShipmentParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseSetPlainShipment(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetPlainShipmentCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Выбирает настройки для \&quot;Плановой доставки\&quot; в счете.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setPlainShipment\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,      \&quot;AddressId\&quot;: \&quot;76b0cc26-7c1e-11e6-80c9-005056a83d22\&quot;,      \&quot;RouteId\&quot;: \&quot;08ee828a-05ae-11e8-beca-1458d05388cc\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePublicInvoice
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePublicInvoice publicInvoiceEnterpriseSetPlainShipment(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetPlainShipmentParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> resp = publicInvoiceEnterpriseSetPlainShipmentWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Выбирает настройки для \&quot;Плановой доставки\&quot; в счете.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setPlainShipment\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,      \&quot;AddressId\&quot;: \&quot;76b0cc26-7c1e-11e6-80c9-005056a83d22\&quot;,      \&quot;RouteId\&quot;: \&quot;08ee828a-05ae-11e8-beca-1458d05388cc\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePublicInvoice&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> publicInvoiceEnterpriseSetPlainShipmentWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetPlainShipmentParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetPlainShipmentValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Выбирает настройки для \&quot;Плановой доставки\&quot; в счете. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setPlainShipment\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,      \&quot;AddressId\&quot;: \&quot;76b0cc26-7c1e-11e6-80c9-005056a83d22\&quot;,      \&quot;RouteId\&quot;: \&quot;08ee828a-05ae-11e8-beca-1458d05388cc\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseSetPlainShipmentAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetPlainShipmentParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePublicInvoice> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetPlainShipmentValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseSetSelfDeliveryShipment
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseSetSelfDeliveryShipmentCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetSelfDeliveryShipmentParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/setSelfDeliveryShipment";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseSetSelfDeliveryShipmentValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetSelfDeliveryShipmentParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseSetSelfDeliveryShipment(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetSelfDeliveryShipmentCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Выбирает настройки для \&quot;Самовывоза\&quot; в счете.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setSelfDeliveryShipment\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePublicInvoice
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePublicInvoice publicInvoiceEnterpriseSetSelfDeliveryShipment(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetSelfDeliveryShipmentParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> resp = publicInvoiceEnterpriseSetSelfDeliveryShipmentWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Выбирает настройки для \&quot;Самовывоза\&quot; в счете.
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setSelfDeliveryShipment\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePublicInvoice&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> publicInvoiceEnterpriseSetSelfDeliveryShipmentWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetSelfDeliveryShipmentParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetSelfDeliveryShipmentValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Выбирает настройки для \&quot;Самовывоза\&quot; в счете. (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setSelfDeliveryShipment\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseSetSelfDeliveryShipmentAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceSetSelfDeliveryShipmentParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePublicInvoice> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseSetSelfDeliveryShipmentValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicInvoiceEnterpriseUpdateProductsQuantity
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseUpdateProductsQuantityCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceUpdateProductsQuantityParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/invoice8/updateProductsQuantity";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicInvoiceEnterpriseUpdateProductsQuantityValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsInvoiceUpdateProductsQuantityParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicInvoiceEnterpriseUpdateProductsQuantity(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseUpdateProductsQuantityCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Изменяет количество товаров в счете
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/updateProductsQuantity\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsInvoicePublicInvoice
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsInvoicePublicInvoice publicInvoiceEnterpriseUpdateProductsQuantity(OmegaAPIAreasPublicModelsRequestModelsInvoiceUpdateProductsQuantityParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> resp = publicInvoiceEnterpriseUpdateProductsQuantityWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Изменяет количество товаров в счете
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/updateProductsQuantity\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsInvoicePublicInvoice&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsInvoicePublicInvoice> publicInvoiceEnterpriseUpdateProductsQuantityWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsInvoiceUpdateProductsQuantityParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicInvoiceEnterpriseUpdateProductsQuantityValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Изменяет количество товаров в счете (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/updateProductsQuantity\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicInvoiceEnterpriseUpdateProductsQuantityAsync(OmegaAPIAreasPublicModelsRequestModelsInvoiceUpdateProductsQuantityParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsInvoicePublicInvoice> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicInvoiceEnterpriseUpdateProductsQuantityValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsInvoicePublicInvoice>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}

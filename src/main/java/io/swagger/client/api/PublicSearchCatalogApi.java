/*
 * Omega.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetAccessoriesParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetAccumulatorsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetBearingsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetGarageEquipmentParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetManufacturersParametersRequestModel;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOilsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetRoadMapParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTechnicalFluidsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetWheelDiscsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsSearchCatalogPublicManufacturer;
import io.swagger.client.model.OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PublicSearchCatalogApi {
    private ApiClient apiClient;

    public PublicSearchCatalogApi() {
        this(Configuration.getDefaultApiClient());
    }

    public PublicSearchCatalogApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for publicSearchCatalogGetAccessories
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetAccessoriesCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetAccessoriesParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/searchcatalog/getAccessories";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicSearchCatalogGetAccessoriesValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetAccessoriesParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicSearchCatalogGetAccessories(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicSearchCatalogGetAccessoriesCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает результат спец подбора &#39;Аксессуары/Оборудование/Инструмент&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getAccessories\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse> publicSearchCatalogGetAccessories(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetAccessoriesParametersRequest model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> resp = publicSearchCatalogGetAccessoriesWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает результат спец подбора &#39;Аксессуары/Оборудование/Инструмент&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getAccessories\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> publicSearchCatalogGetAccessoriesWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetAccessoriesParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicSearchCatalogGetAccessoriesValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает результат спец подбора &#39;Аксессуары/Оборудование/Инструмент&#39; (доступно в пакете PREMIUM) (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getAccessories\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetAccessoriesAsync(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetAccessoriesParametersRequest model, final ApiCallback<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicSearchCatalogGetAccessoriesValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicSearchCatalogGetAccumulators
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetAccumulatorsCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetAccumulatorsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/searchcatalog/getAccumulators";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicSearchCatalogGetAccumulatorsValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetAccumulatorsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicSearchCatalogGetAccumulators(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicSearchCatalogGetAccumulatorsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает результат спец подбора &#39;АКБ&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getAccumulators\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse> publicSearchCatalogGetAccumulators(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetAccumulatorsParametersRequest model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> resp = publicSearchCatalogGetAccumulatorsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает результат спец подбора &#39;АКБ&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getAccumulators\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> publicSearchCatalogGetAccumulatorsWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetAccumulatorsParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicSearchCatalogGetAccumulatorsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает результат спец подбора &#39;АКБ&#39; (доступно в пакете PREMIUM) (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getAccumulators\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetAccumulatorsAsync(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetAccumulatorsParametersRequest model, final ApiCallback<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicSearchCatalogGetAccumulatorsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicSearchCatalogGetBearings
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetBearingsCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetBearingsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/searchcatalog/getBearings";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicSearchCatalogGetBearingsValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetBearingsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicSearchCatalogGetBearings(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicSearchCatalogGetBearingsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает результат спец подбора &#39;Подшипники&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getBearings\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse> publicSearchCatalogGetBearings(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetBearingsParametersRequest model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> resp = publicSearchCatalogGetBearingsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает результат спец подбора &#39;Подшипники&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getBearings\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> publicSearchCatalogGetBearingsWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetBearingsParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicSearchCatalogGetBearingsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает результат спец подбора &#39;Подшипники&#39; (доступно в пакете PREMIUM) (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getBearings\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetBearingsAsync(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetBearingsParametersRequest model, final ApiCallback<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicSearchCatalogGetBearingsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicSearchCatalogGetGarageEquipment
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetGarageEquipmentCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetGarageEquipmentParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/searchcatalog/getGarageEquipment";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicSearchCatalogGetGarageEquipmentValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetGarageEquipmentParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicSearchCatalogGetGarageEquipment(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicSearchCatalogGetGarageEquipmentCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает результат спец подбора &#39;Гаражное оборудование&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getGarageEquipment\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse> publicSearchCatalogGetGarageEquipment(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetGarageEquipmentParametersRequest model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> resp = publicSearchCatalogGetGarageEquipmentWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает результат спец подбора &#39;Гаражное оборудование&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getGarageEquipment\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> publicSearchCatalogGetGarageEquipmentWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetGarageEquipmentParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicSearchCatalogGetGarageEquipmentValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает результат спец подбора &#39;Гаражное оборудование&#39; (доступно в пакете PREMIUM) (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getGarageEquipment\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetGarageEquipmentAsync(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetGarageEquipmentParametersRequest model, final ApiCallback<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicSearchCatalogGetGarageEquipmentValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicSearchCatalogGetLamps
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetLampsCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/searchcatalog/getLamps";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicSearchCatalogGetLampsValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicSearchCatalogGetLamps(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicSearchCatalogGetLampsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает результат спец подбора &#39;Лампы&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getLamps\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse> publicSearchCatalogGetLamps(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> resp = publicSearchCatalogGetLampsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает результат спец подбора &#39;Лампы&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getLamps\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> publicSearchCatalogGetLampsWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicSearchCatalogGetLampsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает результат спец подбора &#39;Лампы&#39; (доступно в пакете PREMIUM) (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getLamps\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetLampsAsync(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest model, final ApiCallback<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicSearchCatalogGetLampsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicSearchCatalogGetManufacturers
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetManufacturersCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetManufacturersParametersRequestModel model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/searchcatalog/getManufacturers";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicSearchCatalogGetManufacturersValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetManufacturersParametersRequestModel model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicSearchCatalogGetManufacturers(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicSearchCatalogGetManufacturersCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает список производителей по категории (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getManufacturers\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicManufacturer&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsSearchCatalogPublicManufacturer> publicSearchCatalogGetManufacturers(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetManufacturersParametersRequestModel model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicManufacturer>> resp = publicSearchCatalogGetManufacturersWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает список производителей по категории (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getManufacturers\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicManufacturer&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicManufacturer>> publicSearchCatalogGetManufacturersWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetManufacturersParametersRequestModel model) throws ApiException {
        com.squareup.okhttp.Call call = publicSearchCatalogGetManufacturersValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicManufacturer>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает список производителей по категории (доступно в пакете PREMIUM) (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getManufacturers\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetManufacturersAsync(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetManufacturersParametersRequestModel model, final ApiCallback<List<OmegaAPIAreasPublicModelsSearchCatalogPublicManufacturer>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicSearchCatalogGetManufacturersValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicManufacturer>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicSearchCatalogGetOils
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetOilsCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOilsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/searchcatalog/getOils";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicSearchCatalogGetOilsValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOilsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicSearchCatalogGetOils(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicSearchCatalogGetOilsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает результат спец подбора &#39;Масла&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getOils\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse> publicSearchCatalogGetOils(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOilsParametersRequest model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> resp = publicSearchCatalogGetOilsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает результат спец подбора &#39;Масла&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getOils\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> publicSearchCatalogGetOilsWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOilsParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicSearchCatalogGetOilsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает результат спец подбора &#39;Масла&#39; (доступно в пакете PREMIUM) (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getOils\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetOilsAsync(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOilsParametersRequest model, final ApiCallback<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicSearchCatalogGetOilsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicSearchCatalogGetOptic
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetOpticCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/searchcatalog/getOptic";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicSearchCatalogGetOpticValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicSearchCatalogGetOptic(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicSearchCatalogGetOpticCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает результат спец подбора &#39;Кузов и оптика&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getOptic\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse> publicSearchCatalogGetOptic(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> resp = publicSearchCatalogGetOpticWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает результат спец подбора &#39;Кузов и оптика&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getOptic\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> publicSearchCatalogGetOpticWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicSearchCatalogGetOpticValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает результат спец подбора &#39;Кузов и оптика&#39; (доступно в пакете PREMIUM) (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getOptic\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetOpticAsync(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest model, final ApiCallback<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicSearchCatalogGetOpticValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicSearchCatalogGetRoadMap
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetRoadMapCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetRoadMapParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/searchcatalog/getRoadMap";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicSearchCatalogGetRoadMapValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetRoadMapParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicSearchCatalogGetRoadMap(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicSearchCatalogGetRoadMapCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает результат спец подбора &#39;Дорожная карта&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getRoadMap\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse> publicSearchCatalogGetRoadMap(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetRoadMapParametersRequest model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> resp = publicSearchCatalogGetRoadMapWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает результат спец подбора &#39;Дорожная карта&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getRoadMap\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> publicSearchCatalogGetRoadMapWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetRoadMapParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicSearchCatalogGetRoadMapValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает результат спец подбора &#39;Дорожная карта&#39; (доступно в пакете PREMIUM) (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getRoadMap\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetRoadMapAsync(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetRoadMapParametersRequest model, final ApiCallback<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicSearchCatalogGetRoadMapValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicSearchCatalogGetTechnicalFluids
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetTechnicalFluidsCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTechnicalFluidsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/searchcatalog/getTechnicalFluids";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicSearchCatalogGetTechnicalFluidsValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTechnicalFluidsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicSearchCatalogGetTechnicalFluids(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicSearchCatalogGetTechnicalFluidsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает результат спец подбора &#39;Технические жидкости&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getTechnicalFluids\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse> publicSearchCatalogGetTechnicalFluids(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTechnicalFluidsParametersRequest model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> resp = publicSearchCatalogGetTechnicalFluidsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает результат спец подбора &#39;Технические жидкости&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getTechnicalFluids\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> publicSearchCatalogGetTechnicalFluidsWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTechnicalFluidsParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicSearchCatalogGetTechnicalFluidsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает результат спец подбора &#39;Технические жидкости&#39; (доступно в пакете PREMIUM) (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getTechnicalFluids\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetTechnicalFluidsAsync(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTechnicalFluidsParametersRequest model, final ApiCallback<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicSearchCatalogGetTechnicalFluidsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicSearchCatalogGetTires
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetTiresCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/searchcatalog/getTires";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicSearchCatalogGetTiresValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicSearchCatalogGetTires(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicSearchCatalogGetTiresCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает результат спец подбора &#39;Шины&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getTires\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse> publicSearchCatalogGetTires(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> resp = publicSearchCatalogGetTiresWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает результат спец подбора &#39;Шины&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getTires\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> publicSearchCatalogGetTiresWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicSearchCatalogGetTiresValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает результат спец подбора &#39;Шины&#39; (доступно в пакете PREMIUM) (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getTires\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetTiresAsync(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest model, final ApiCallback<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicSearchCatalogGetTiresValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicSearchCatalogGetWheelDiscs
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetWheelDiscsCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetWheelDiscsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/searchcatalog/getWheelDiscs";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicSearchCatalogGetWheelDiscsValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetWheelDiscsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicSearchCatalogGetWheelDiscs(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicSearchCatalogGetWheelDiscsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает результат спец подбора &#39;Колесные диски&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getWheelDiscs\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse> publicSearchCatalogGetWheelDiscs(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetWheelDiscsParametersRequest model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> resp = publicSearchCatalogGetWheelDiscsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает результат спец подбора &#39;Колесные диски&#39; (доступно в пакете PREMIUM)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getWheelDiscs\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> publicSearchCatalogGetWheelDiscsWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetWheelDiscsParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicSearchCatalogGetWheelDiscsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает результат спец подбора &#39;Колесные диски&#39; (доступно в пакете PREMIUM) (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/searchcatalog/getWheelDiscs\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicSearchCatalogGetWheelDiscsAsync(OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetWheelDiscsParametersRequest model, final ApiCallback<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicSearchCatalogGetWheelDiscsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsSearchCatalogPublicProductResponse>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}

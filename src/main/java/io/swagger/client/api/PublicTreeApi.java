/*
 * Omega.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicManufacturerModel;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsTreeGetCarModelsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsTreeGetManufacturersParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsTreeGetModelModificationsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsTreeGetTreeNodeParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsTreePublicTreeNode;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PublicTreeApi {
    private ApiClient apiClient;

    public PublicTreeApi() {
        this(Configuration.getDefaultApiClient());
    }

    public PublicTreeApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for publicTreeGetCarModels
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicTreeGetCarModelsCall(OmegaAPIAreasPublicModelsRequestModelsTreeGetCarModelsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/tree/getCarModels";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicTreeGetCarModelsValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsTreeGetCarModelsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicTreeGetCarModels(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicTreeGetCarModelsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает список моделей (доступно в пакете GOLD)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/product/getCarModes\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ManufacturerId\&quot;: 0,      \&quot;TypeId\&quot;: 0  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel publicTreeGetCarModels(OmegaAPIAreasPublicModelsRequestModelsTreeGetCarModelsParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel> resp = publicTreeGetCarModelsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает список моделей (доступно в пакете GOLD)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/product/getCarModes\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ManufacturerId\&quot;: 0,      \&quot;TypeId\&quot;: 0  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel> publicTreeGetCarModelsWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsTreeGetCarModelsParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicTreeGetCarModelsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает список моделей (доступно в пакете GOLD) (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/product/getCarModes\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ManufacturerId\&quot;: 0,      \&quot;TypeId\&quot;: 0  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicTreeGetCarModelsAsync(OmegaAPIAreasPublicModelsRequestModelsTreeGetCarModelsParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicTreeGetCarModelsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicTreeGetManufacturers
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicTreeGetManufacturersCall(OmegaAPIAreasPublicModelsRequestModelsTreeGetManufacturersParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/tree/getManufacturers";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicTreeGetManufacturersValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsTreeGetManufacturersParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicTreeGetManufacturers(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicTreeGetManufacturersCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает список производителей (доступно в пакете GOLD)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/product/getManufacturers\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;typeId\&quot;: 0  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicManufacturerModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicManufacturerModel publicTreeGetManufacturers(OmegaAPIAreasPublicModelsRequestModelsTreeGetManufacturersParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicManufacturerModel> resp = publicTreeGetManufacturersWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает список производителей (доступно в пакете GOLD)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/product/getManufacturers\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;typeId\&quot;: 0  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicManufacturerModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicManufacturerModel> publicTreeGetManufacturersWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsTreeGetManufacturersParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicTreeGetManufacturersValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicManufacturerModel>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает список производителей (доступно в пакете GOLD) (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/product/getManufacturers\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;typeId\&quot;: 0  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicTreeGetManufacturersAsync(OmegaAPIAreasPublicModelsRequestModelsTreeGetManufacturersParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicManufacturerModel> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicTreeGetManufacturersValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicManufacturerModel>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicTreeGetModifications
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicTreeGetModificationsCall(OmegaAPIAreasPublicModelsRequestModelsTreeGetModelModificationsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/tree/getModifications";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicTreeGetModificationsValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsTreeGetModelModificationsParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicTreeGetModifications(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicTreeGetModificationsCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает список модификаций (доступно в пакете GOLD)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/product/getModifications\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ModelId\&quot;: 0  }\&quot;
     * @param model  (required)
     * @return OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel publicTreeGetModifications(OmegaAPIAreasPublicModelsRequestModelsTreeGetModelModificationsParametersRequest model) throws ApiException {
        ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel> resp = publicTreeGetModificationsWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает список модификаций (доступно в пакете GOLD)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/product/getModifications\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ModelId\&quot;: 0  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel> publicTreeGetModificationsWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsTreeGetModelModificationsParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicTreeGetModificationsValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает список модификаций (доступно в пакете GOLD) (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/product/getModifications\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ModelId\&quot;: 0  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicTreeGetModificationsAsync(OmegaAPIAreasPublicModelsRequestModelsTreeGetModelModificationsParametersRequest model, final ApiCallback<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicTreeGetModificationsValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsTreePublicCarModel>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for publicTreeGetTreeNode
     * @param model  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call publicTreeGetTreeNodeCall(OmegaAPIAreasPublicModelsRequestModelsTreeGetTreeNodeParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = model;
        
        // create path and map variables
        String localVarPath = "/public/api/v1.0/tree/getTreeNode";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call publicTreeGetTreeNodeValidateBeforeCall(OmegaAPIAreasPublicModelsRequestModelsTreeGetTreeNodeParametersRequest model, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling publicTreeGetTreeNode(Async)");
        }
        
        
        com.squareup.okhttp.Call call = publicTreeGetTreeNodeCall(model, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Возвращает дерево разузловки (доступно в пакете GOLD)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/product/getTreeNode\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ModificationId\&quot;: 0  }\&quot;
     * @param model  (required)
     * @return List&lt;OmegaAPIAreasPublicModelsTreePublicTreeNode&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OmegaAPIAreasPublicModelsTreePublicTreeNode> publicTreeGetTreeNode(OmegaAPIAreasPublicModelsRequestModelsTreeGetTreeNodeParametersRequest model) throws ApiException {
        ApiResponse<List<OmegaAPIAreasPublicModelsTreePublicTreeNode>> resp = publicTreeGetTreeNodeWithHttpInfo(model);
        return resp.getData();
    }

    /**
     * Возвращает дерево разузловки (доступно в пакете GOLD)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/product/getTreeNode\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ModificationId\&quot;: 0  }\&quot;
     * @param model  (required)
     * @return ApiResponse&lt;List&lt;OmegaAPIAreasPublicModelsTreePublicTreeNode&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OmegaAPIAreasPublicModelsTreePublicTreeNode>> publicTreeGetTreeNodeWithHttpInfo(OmegaAPIAreasPublicModelsRequestModelsTreeGetTreeNodeParametersRequest model) throws ApiException {
        com.squareup.okhttp.Call call = publicTreeGetTreeNodeValidateBeforeCall(model, null, null);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsTreePublicTreeNode>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Возвращает дерево разузловки (доступно в пакете GOLD) (asynchronously)
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/product/getTreeNode\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ModificationId\&quot;: 0  }\&quot;
     * @param model  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call publicTreeGetTreeNodeAsync(OmegaAPIAreasPublicModelsRequestModelsTreeGetTreeNodeParametersRequest model, final ApiCallback<List<OmegaAPIAreasPublicModelsTreePublicTreeNode>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = publicTreeGetTreeNodeValidateBeforeCall(model, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OmegaAPIAreasPublicModelsTreePublicTreeNode>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}

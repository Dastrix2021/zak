/*
 * Omega.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * OmegaAPIAreasPublicModelsClaimPublicClaimContactInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-12-27T17:23:48.058+02:00")
public class OmegaAPIAreasPublicModelsClaimPublicClaimContactInfo {
  /**
   * Способ оповещения, 0 - Email, 1 - Телефон, число
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    TypeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value = jsonReader.nextInt();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("Type")
  private TypeEnum type = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("PhoneId")
  private String phoneId = null;

  public OmegaAPIAreasPublicModelsClaimPublicClaimContactInfo type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Способ оповещения, 0 - Email, 1 - Телефон, число
   * @return type
  **/
  @ApiModelProperty(value = "Способ оповещения, 0 - Email, 1 - Телефон, число")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public OmegaAPIAreasPublicModelsClaimPublicClaimContactInfo description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Электронная почта или телефон, в зависимоит от выбранного способа оповещения
   * @return description
  **/
  @ApiModelProperty(value = "Электронная почта или телефон, в зависимоит от выбранного способа оповещения")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public OmegaAPIAreasPublicModelsClaimPublicClaimContactInfo phoneId(String phoneId) {
    this.phoneId = phoneId;
    return this;
  }

   /**
   * Уникальный идентификатор телефона (если выбран способ оповещения телефоном)
   * @return phoneId
  **/
  @ApiModelProperty(value = "Уникальный идентификатор телефона (если выбран способ оповещения телефоном)")
  public String getPhoneId() {
    return phoneId;
  }

  public void setPhoneId(String phoneId) {
    this.phoneId = phoneId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OmegaAPIAreasPublicModelsClaimPublicClaimContactInfo omegaAPIAreasPublicModelsClaimPublicClaimContactInfo = (OmegaAPIAreasPublicModelsClaimPublicClaimContactInfo) o;
    return Objects.equals(this.type, omegaAPIAreasPublicModelsClaimPublicClaimContactInfo.type) &&
        Objects.equals(this.description, omegaAPIAreasPublicModelsClaimPublicClaimContactInfo.description) &&
        Objects.equals(this.phoneId, omegaAPIAreasPublicModelsClaimPublicClaimContactInfo.phoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, description, phoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OmegaAPIAreasPublicModelsClaimPublicClaimContactInfo {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    phoneId: ").append(toIndentedString(phoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


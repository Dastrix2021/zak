/*
 * Omega.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * OmegaAPIAreasPublicModelsPublicBasketProduct
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-12-27T17:23:48.058+02:00")
public class OmegaAPIAreasPublicModelsPublicBasketProduct {
  @SerializedName("Card")
  private String card = null;

  @SerializedName("ProdId")
  private Long prodId = null;

  @SerializedName("Order")
  private Double order = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("BrandDescription")
  private String brandDescription = null;

  @SerializedName("Summ")
  private Double summ = null;

  public OmegaAPIAreasPublicModelsPublicBasketProduct card(String card) {
    this.card = card;
    return this;
  }

   /**
   * Карточка товара
   * @return card
  **/
  @ApiModelProperty(value = "Карточка товара")
  public String getCard() {
    return card;
  }

  public void setCard(String card) {
    this.card = card;
  }

  public OmegaAPIAreasPublicModelsPublicBasketProduct prodId(Long prodId) {
    this.prodId = prodId;
    return this;
  }

   /**
   * Уникальный идентификатор товара
   * @return prodId
  **/
  @ApiModelProperty(value = "Уникальный идентификатор товара")
  public Long getProdId() {
    return prodId;
  }

  public void setProdId(Long prodId) {
    this.prodId = prodId;
  }

  public OmegaAPIAreasPublicModelsPublicBasketProduct order(Double order) {
    this.order = order;
    return this;
  }

   /**
   * Количество товара
   * @return order
  **/
  @ApiModelProperty(value = "Количество товара")
  public Double getOrder() {
    return order;
  }

  public void setOrder(Double order) {
    this.order = order;
  }

  public OmegaAPIAreasPublicModelsPublicBasketProduct name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Наименование товара
   * @return name
  **/
  @ApiModelProperty(value = "Наименование товара")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public OmegaAPIAreasPublicModelsPublicBasketProduct brandDescription(String brandDescription) {
    this.brandDescription = brandDescription;
    return this;
  }

   /**
   * Бренд товара
   * @return brandDescription
  **/
  @ApiModelProperty(value = "Бренд товара")
  public String getBrandDescription() {
    return brandDescription;
  }

  public void setBrandDescription(String brandDescription) {
    this.brandDescription = brandDescription;
  }

  public OmegaAPIAreasPublicModelsPublicBasketProduct summ(Double summ) {
    this.summ = summ;
    return this;
  }

   /**
   * Цена за единицу товара
   * @return summ
  **/
  @ApiModelProperty(value = "Цена за единицу товара")
  public Double getSumm() {
    return summ;
  }

  public void setSumm(Double summ) {
    this.summ = summ;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OmegaAPIAreasPublicModelsPublicBasketProduct omegaAPIAreasPublicModelsPublicBasketProduct = (OmegaAPIAreasPublicModelsPublicBasketProduct) o;
    return Objects.equals(this.card, omegaAPIAreasPublicModelsPublicBasketProduct.card) &&
        Objects.equals(this.prodId, omegaAPIAreasPublicModelsPublicBasketProduct.prodId) &&
        Objects.equals(this.order, omegaAPIAreasPublicModelsPublicBasketProduct.order) &&
        Objects.equals(this.name, omegaAPIAreasPublicModelsPublicBasketProduct.name) &&
        Objects.equals(this.brandDescription, omegaAPIAreasPublicModelsPublicBasketProduct.brandDescription) &&
        Objects.equals(this.summ, omegaAPIAreasPublicModelsPublicBasketProduct.summ);
  }

  @Override
  public int hashCode() {
    return Objects.hash(card, prodId, order, name, brandDescription, summ);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OmegaAPIAreasPublicModelsPublicBasketProduct {\n");
    
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    prodId: ").append(toIndentedString(prodId)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    brandDescription: ").append(toIndentedString(brandDescription)).append("\n");
    sb.append("    summ: ").append(toIndentedString(summ)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


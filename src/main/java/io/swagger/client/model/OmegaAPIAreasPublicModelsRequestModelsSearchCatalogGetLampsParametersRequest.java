/*
 * Omega.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-12-27T17:23:48.058+02:00")
public class OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest {
  @SerializedName("IsSale")
  private Integer isSale = null;

  @SerializedName("Rest")
  private Integer rest = null;

  @SerializedName("Manufacturers")
  private List<Integer> manufacturers = null;

  @SerializedName("LampPowerList")
  private List<String> lampPowerList = null;

  @SerializedName("LampBaseList")
  private List<String> lampBaseList = null;

  @SerializedName("LampVoltageList")
  private List<String> lampVoltageList = null;

  @SerializedName("XenonList")
  private List<String> xenonList = null;

  @SerializedName("LampUsageList")
  private List<String> lampUsageList = null;

  @SerializedName("From")
  private Integer from = null;

  @SerializedName("Count")
  private Integer count = null;

  @SerializedName("FormFactor")
  private Integer formFactor = null;

  @SerializedName("Key")
  private String key = null;

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest isSale(Integer isSale) {
    this.isSale = isSale;
    return this;
  }

   /**
   * Признак снижения цены, 0 -все товары, 1 - только товары со скидкой
   * @return isSale
  **/
  @ApiModelProperty(value = "Признак снижения цены, 0 -все товары, 1 - только товары со скидкой")
  public Integer getIsSale() {
    return isSale;
  }

  public void setIsSale(Integer isSale) {
    this.isSale = isSale;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest rest(Integer rest) {
    this.rest = rest;
    return this;
  }

   /**
   * Признак наличия товара на остатках, число, 0 - без учета остатков, 1 - только в наличии
   * @return rest
  **/
  @ApiModelProperty(value = "Признак наличия товара на остатках, число, 0 - без учета остатков, 1 - только в наличии")
  public Integer getRest() {
    return rest;
  }

  public void setRest(Integer rest) {
    this.rest = rest;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest manufacturers(List<Integer> manufacturers) {
    this.manufacturers = manufacturers;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest addManufacturersItem(Integer manufacturersItem) {
    if (this.manufacturers == null) {
      this.manufacturers = new ArrayList<Integer>();
    }
    this.manufacturers.add(manufacturersItem);
    return this;
  }

   /**
   * Бренд
   * @return manufacturers
  **/
  @ApiModelProperty(value = "Бренд")
  public List<Integer> getManufacturers() {
    return manufacturers;
  }

  public void setManufacturers(List<Integer> manufacturers) {
    this.manufacturers = manufacturers;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest lampPowerList(List<String> lampPowerList) {
    this.lampPowerList = lampPowerList;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest addLampPowerListItem(String lampPowerListItem) {
    if (this.lampPowerList == null) {
      this.lampPowerList = new ArrayList<String>();
    }
    this.lampPowerList.add(lampPowerListItem);
    return this;
  }

   /**
   * Мощность
   * @return lampPowerList
  **/
  @ApiModelProperty(value = "Мощность")
  public List<String> getLampPowerList() {
    return lampPowerList;
  }

  public void setLampPowerList(List<String> lampPowerList) {
    this.lampPowerList = lampPowerList;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest lampBaseList(List<String> lampBaseList) {
    this.lampBaseList = lampBaseList;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest addLampBaseListItem(String lampBaseListItem) {
    if (this.lampBaseList == null) {
      this.lampBaseList = new ArrayList<String>();
    }
    this.lampBaseList.add(lampBaseListItem);
    return this;
  }

   /**
   * Цоколь
   * @return lampBaseList
  **/
  @ApiModelProperty(value = "Цоколь")
  public List<String> getLampBaseList() {
    return lampBaseList;
  }

  public void setLampBaseList(List<String> lampBaseList) {
    this.lampBaseList = lampBaseList;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest lampVoltageList(List<String> lampVoltageList) {
    this.lampVoltageList = lampVoltageList;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest addLampVoltageListItem(String lampVoltageListItem) {
    if (this.lampVoltageList == null) {
      this.lampVoltageList = new ArrayList<String>();
    }
    this.lampVoltageList.add(lampVoltageListItem);
    return this;
  }

   /**
   * Напряжение
   * @return lampVoltageList
  **/
  @ApiModelProperty(value = "Напряжение")
  public List<String> getLampVoltageList() {
    return lampVoltageList;
  }

  public void setLampVoltageList(List<String> lampVoltageList) {
    this.lampVoltageList = lampVoltageList;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest xenonList(List<String> xenonList) {
    this.xenonList = xenonList;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest addXenonListItem(String xenonListItem) {
    if (this.xenonList == null) {
      this.xenonList = new ArrayList<String>();
    }
    this.xenonList.add(xenonListItem);
    return this;
  }

   /**
   * Ксенон
   * @return xenonList
  **/
  @ApiModelProperty(value = "Ксенон")
  public List<String> getXenonList() {
    return xenonList;
  }

  public void setXenonList(List<String> xenonList) {
    this.xenonList = xenonList;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest lampUsageList(List<String> lampUsageList) {
    this.lampUsageList = lampUsageList;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest addLampUsageListItem(String lampUsageListItem) {
    if (this.lampUsageList == null) {
      this.lampUsageList = new ArrayList<String>();
    }
    this.lampUsageList.add(lampUsageListItem);
    return this;
  }

   /**
   * Применение
   * @return lampUsageList
  **/
  @ApiModelProperty(value = "Применение")
  public List<String> getLampUsageList() {
    return lampUsageList;
  }

  public void setLampUsageList(List<String> lampUsageList) {
    this.lampUsageList = lampUsageList;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest from(Integer from) {
    this.from = from;
    return this;
  }

   /**
   * Номер с которого начинаются товары - для постраничного вывода, по умолчанию с 0
   * @return from
  **/
  @ApiModelProperty(value = "Номер с которого начинаются товары - для постраничного вывода, по умолчанию с 0")
  public Integer getFrom() {
    return from;
  }

  public void setFrom(Integer from) {
    this.from = from;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Количество результатов на страницу, по-умолчанию 24
   * minimum: 1
   * maximum: 2147483647
   * @return count
  **/
  @ApiModelProperty(value = "Количество результатов на страницу, по-умолчанию 24")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest formFactor(Integer formFactor) {
    this.formFactor = formFactor;
    return this;
  }

   /**
   * Тип автомобиля, 0 - легковой, 1 - грузовой, 2 - все
   * @return formFactor
  **/
  @ApiModelProperty(value = "Тип автомобиля, 0 - легковой, 1 - грузовой, 2 - все")
  public Integer getFormFactor() {
    return formFactor;
  }

  public void setFormFactor(Integer formFactor) {
    this.formFactor = formFactor;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest key(String key) {
    this.key = key;
    return this;
  }

   /**
   * Ключ доступа, строка
   * @return key
  **/
  @ApiModelProperty(required = true, value = "Ключ доступа, строка")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest = (OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest) o;
    return Objects.equals(this.isSale, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest.isSale) &&
        Objects.equals(this.rest, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest.rest) &&
        Objects.equals(this.manufacturers, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest.manufacturers) &&
        Objects.equals(this.lampPowerList, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest.lampPowerList) &&
        Objects.equals(this.lampBaseList, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest.lampBaseList) &&
        Objects.equals(this.lampVoltageList, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest.lampVoltageList) &&
        Objects.equals(this.xenonList, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest.xenonList) &&
        Objects.equals(this.lampUsageList, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest.lampUsageList) &&
        Objects.equals(this.from, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest.from) &&
        Objects.equals(this.count, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest.count) &&
        Objects.equals(this.formFactor, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest.formFactor) &&
        Objects.equals(this.key, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest.key);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isSale, rest, manufacturers, lampPowerList, lampBaseList, lampVoltageList, xenonList, lampUsageList, from, count, formFactor, key);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetLampsParametersRequest {\n");
    
    sb.append("    isSale: ").append(toIndentedString(isSale)).append("\n");
    sb.append("    rest: ").append(toIndentedString(rest)).append("\n");
    sb.append("    manufacturers: ").append(toIndentedString(manufacturers)).append("\n");
    sb.append("    lampPowerList: ").append(toIndentedString(lampPowerList)).append("\n");
    sb.append("    lampBaseList: ").append(toIndentedString(lampBaseList)).append("\n");
    sb.append("    lampVoltageList: ").append(toIndentedString(lampVoltageList)).append("\n");
    sb.append("    xenonList: ").append(toIndentedString(xenonList)).append("\n");
    sb.append("    lampUsageList: ").append(toIndentedString(lampUsageList)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    formFactor: ").append(toIndentedString(formFactor)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


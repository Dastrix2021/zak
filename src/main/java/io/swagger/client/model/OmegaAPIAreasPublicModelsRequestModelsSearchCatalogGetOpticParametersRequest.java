/*
 * Omega.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-12-27T17:23:48.058+02:00")
public class OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest {
  @SerializedName("IsSale")
  private Integer isSale = null;

  @SerializedName("Rest")
  private Integer rest = null;

  @SerializedName("Manufacturers")
  private List<Integer> manufacturers = null;

  @SerializedName("CarModelsOptic")
  private List<String> carModelsOptic = null;

  @SerializedName("OpticNbodySideList")
  private List<String> opticNbodySideList = null;

  @SerializedName("OpticGroupList")
  private List<String> opticGroupList = null;

  @SerializedName("From")
  private Integer from = null;

  @SerializedName("Count")
  private Integer count = null;

  @SerializedName("FormFactor")
  private Integer formFactor = null;

  @SerializedName("Key")
  private String key = null;

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest isSale(Integer isSale) {
    this.isSale = isSale;
    return this;
  }

   /**
   * Признак снижения цены, 0 -все товары, 1 - только товары со скидкой
   * @return isSale
  **/
  @ApiModelProperty(value = "Признак снижения цены, 0 -все товары, 1 - только товары со скидкой")
  public Integer getIsSale() {
    return isSale;
  }

  public void setIsSale(Integer isSale) {
    this.isSale = isSale;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest rest(Integer rest) {
    this.rest = rest;
    return this;
  }

   /**
   * Признак наличия товара на остатках, число, 0 - без учета остатков, 1 - только в наличии
   * @return rest
  **/
  @ApiModelProperty(value = "Признак наличия товара на остатках, число, 0 - без учета остатков, 1 - только в наличии")
  public Integer getRest() {
    return rest;
  }

  public void setRest(Integer rest) {
    this.rest = rest;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest manufacturers(List<Integer> manufacturers) {
    this.manufacturers = manufacturers;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest addManufacturersItem(Integer manufacturersItem) {
    if (this.manufacturers == null) {
      this.manufacturers = new ArrayList<Integer>();
    }
    this.manufacturers.add(manufacturersItem);
    return this;
  }

   /**
   * Бренд
   * @return manufacturers
  **/
  @ApiModelProperty(value = "Бренд")
  public List<Integer> getManufacturers() {
    return manufacturers;
  }

  public void setManufacturers(List<Integer> manufacturers) {
    this.manufacturers = manufacturers;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest carModelsOptic(List<String> carModelsOptic) {
    this.carModelsOptic = carModelsOptic;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest addCarModelsOpticItem(String carModelsOpticItem) {
    if (this.carModelsOptic == null) {
      this.carModelsOptic = new ArrayList<String>();
    }
    this.carModelsOptic.add(carModelsOpticItem);
    return this;
  }

   /**
   * Модель
   * @return carModelsOptic
  **/
  @ApiModelProperty(value = "Модель")
  public List<String> getCarModelsOptic() {
    return carModelsOptic;
  }

  public void setCarModelsOptic(List<String> carModelsOptic) {
    this.carModelsOptic = carModelsOptic;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest opticNbodySideList(List<String> opticNbodySideList) {
    this.opticNbodySideList = opticNbodySideList;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest addOpticNbodySideListItem(String opticNbodySideListItem) {
    if (this.opticNbodySideList == null) {
      this.opticNbodySideList = new ArrayList<String>();
    }
    this.opticNbodySideList.add(opticNbodySideListItem);
    return this;
  }

   /**
   * Сторона
   * @return opticNbodySideList
  **/
  @ApiModelProperty(value = "Сторона")
  public List<String> getOpticNbodySideList() {
    return opticNbodySideList;
  }

  public void setOpticNbodySideList(List<String> opticNbodySideList) {
    this.opticNbodySideList = opticNbodySideList;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest opticGroupList(List<String> opticGroupList) {
    this.opticGroupList = opticGroupList;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest addOpticGroupListItem(String opticGroupListItem) {
    if (this.opticGroupList == null) {
      this.opticGroupList = new ArrayList<String>();
    }
    this.opticGroupList.add(opticGroupListItem);
    return this;
  }

   /**
   * Группа товаров
   * @return opticGroupList
  **/
  @ApiModelProperty(value = "Группа товаров")
  public List<String> getOpticGroupList() {
    return opticGroupList;
  }

  public void setOpticGroupList(List<String> opticGroupList) {
    this.opticGroupList = opticGroupList;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest from(Integer from) {
    this.from = from;
    return this;
  }

   /**
   * Номер с которого начинаются товары - для постраничного вывода, по умолчанию с 0
   * @return from
  **/
  @ApiModelProperty(value = "Номер с которого начинаются товары - для постраничного вывода, по умолчанию с 0")
  public Integer getFrom() {
    return from;
  }

  public void setFrom(Integer from) {
    this.from = from;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Количество результатов на страницу, по-умолчанию 24
   * minimum: 1
   * maximum: 2147483647
   * @return count
  **/
  @ApiModelProperty(value = "Количество результатов на страницу, по-умолчанию 24")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest formFactor(Integer formFactor) {
    this.formFactor = formFactor;
    return this;
  }

   /**
   * Тип автомобиля, 0 - легковой, 1 - грузовой, 2 - все
   * @return formFactor
  **/
  @ApiModelProperty(value = "Тип автомобиля, 0 - легковой, 1 - грузовой, 2 - все")
  public Integer getFormFactor() {
    return formFactor;
  }

  public void setFormFactor(Integer formFactor) {
    this.formFactor = formFactor;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest key(String key) {
    this.key = key;
    return this;
  }

   /**
   * Ключ доступа, строка
   * @return key
  **/
  @ApiModelProperty(required = true, value = "Ключ доступа, строка")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest = (OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest) o;
    return Objects.equals(this.isSale, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest.isSale) &&
        Objects.equals(this.rest, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest.rest) &&
        Objects.equals(this.manufacturers, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest.manufacturers) &&
        Objects.equals(this.carModelsOptic, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest.carModelsOptic) &&
        Objects.equals(this.opticNbodySideList, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest.opticNbodySideList) &&
        Objects.equals(this.opticGroupList, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest.opticGroupList) &&
        Objects.equals(this.from, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest.from) &&
        Objects.equals(this.count, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest.count) &&
        Objects.equals(this.formFactor, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest.formFactor) &&
        Objects.equals(this.key, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest.key);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isSale, rest, manufacturers, carModelsOptic, opticNbodySideList, opticGroupList, from, count, formFactor, key);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetOpticParametersRequest {\n");
    
    sb.append("    isSale: ").append(toIndentedString(isSale)).append("\n");
    sb.append("    rest: ").append(toIndentedString(rest)).append("\n");
    sb.append("    manufacturers: ").append(toIndentedString(manufacturers)).append("\n");
    sb.append("    carModelsOptic: ").append(toIndentedString(carModelsOptic)).append("\n");
    sb.append("    opticNbodySideList: ").append(toIndentedString(opticNbodySideList)).append("\n");
    sb.append("    opticGroupList: ").append(toIndentedString(opticGroupList)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    formFactor: ").append(toIndentedString(formFactor)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


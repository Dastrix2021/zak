/*
 * Omega.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-12-27T17:23:48.058+02:00")
public class OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest {
  @SerializedName("IsSale")
  private Integer isSale = null;

  @SerializedName("Rest")
  private Integer rest = null;

  @SerializedName("Manufacturers")
  private List<Integer> manufacturers = null;

  @SerializedName("DiameterList")
  private List<String> diameterList = null;

  @SerializedName("FrameSizeList")
  private List<String> frameSizeList = null;

  @SerializedName("WidthList")
  private List<String> widthList = null;

  @SerializedName("AxisTypeList")
  private List<String> axisTypeList = null;

  @SerializedName("SeasonList")
  private List<String> seasonList = null;

  @SerializedName("UsageList")
  private List<String> usageList = null;

  @SerializedName("From")
  private Integer from = null;

  @SerializedName("Count")
  private Integer count = null;

  @SerializedName("FormFactor")
  private Integer formFactor = null;

  @SerializedName("Key")
  private String key = null;

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest isSale(Integer isSale) {
    this.isSale = isSale;
    return this;
  }

   /**
   * Признак снижения цены, 0 -все товары, 1 - только товары со скидкой
   * @return isSale
  **/
  @ApiModelProperty(value = "Признак снижения цены, 0 -все товары, 1 - только товары со скидкой")
  public Integer getIsSale() {
    return isSale;
  }

  public void setIsSale(Integer isSale) {
    this.isSale = isSale;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest rest(Integer rest) {
    this.rest = rest;
    return this;
  }

   /**
   * Признак наличия товара на остатках, число, 0 - без учета остатков, 1 - только в наличии
   * @return rest
  **/
  @ApiModelProperty(value = "Признак наличия товара на остатках, число, 0 - без учета остатков, 1 - только в наличии")
  public Integer getRest() {
    return rest;
  }

  public void setRest(Integer rest) {
    this.rest = rest;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest manufacturers(List<Integer> manufacturers) {
    this.manufacturers = manufacturers;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest addManufacturersItem(Integer manufacturersItem) {
    if (this.manufacturers == null) {
      this.manufacturers = new ArrayList<Integer>();
    }
    this.manufacturers.add(manufacturersItem);
    return this;
  }

   /**
   * Бренд
   * @return manufacturers
  **/
  @ApiModelProperty(value = "Бренд")
  public List<Integer> getManufacturers() {
    return manufacturers;
  }

  public void setManufacturers(List<Integer> manufacturers) {
    this.manufacturers = manufacturers;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest diameterList(List<String> diameterList) {
    this.diameterList = diameterList;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest addDiameterListItem(String diameterListItem) {
    if (this.diameterList == null) {
      this.diameterList = new ArrayList<String>();
    }
    this.diameterList.add(diameterListItem);
    return this;
  }

   /**
   * Диаметр
   * @return diameterList
  **/
  @ApiModelProperty(value = "Диаметр")
  public List<String> getDiameterList() {
    return diameterList;
  }

  public void setDiameterList(List<String> diameterList) {
    this.diameterList = diameterList;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest frameSizeList(List<String> frameSizeList) {
    this.frameSizeList = frameSizeList;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest addFrameSizeListItem(String frameSizeListItem) {
    if (this.frameSizeList == null) {
      this.frameSizeList = new ArrayList<String>();
    }
    this.frameSizeList.add(frameSizeListItem);
    return this;
  }

   /**
   * Типоразмер
   * @return frameSizeList
  **/
  @ApiModelProperty(value = "Типоразмер")
  public List<String> getFrameSizeList() {
    return frameSizeList;
  }

  public void setFrameSizeList(List<String> frameSizeList) {
    this.frameSizeList = frameSizeList;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest widthList(List<String> widthList) {
    this.widthList = widthList;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest addWidthListItem(String widthListItem) {
    if (this.widthList == null) {
      this.widthList = new ArrayList<String>();
    }
    this.widthList.add(widthListItem);
    return this;
  }

   /**
   * Ширина
   * @return widthList
  **/
  @ApiModelProperty(value = "Ширина")
  public List<String> getWidthList() {
    return widthList;
  }

  public void setWidthList(List<String> widthList) {
    this.widthList = widthList;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest axisTypeList(List<String> axisTypeList) {
    this.axisTypeList = axisTypeList;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest addAxisTypeListItem(String axisTypeListItem) {
    if (this.axisTypeList == null) {
      this.axisTypeList = new ArrayList<String>();
    }
    this.axisTypeList.add(axisTypeListItem);
    return this;
  }

   /**
   * Тип оси
   * @return axisTypeList
  **/
  @ApiModelProperty(value = "Тип оси")
  public List<String> getAxisTypeList() {
    return axisTypeList;
  }

  public void setAxisTypeList(List<String> axisTypeList) {
    this.axisTypeList = axisTypeList;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest seasonList(List<String> seasonList) {
    this.seasonList = seasonList;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest addSeasonListItem(String seasonListItem) {
    if (this.seasonList == null) {
      this.seasonList = new ArrayList<String>();
    }
    this.seasonList.add(seasonListItem);
    return this;
  }

   /**
   * Сезонность
   * @return seasonList
  **/
  @ApiModelProperty(value = "Сезонность")
  public List<String> getSeasonList() {
    return seasonList;
  }

  public void setSeasonList(List<String> seasonList) {
    this.seasonList = seasonList;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest usageList(List<String> usageList) {
    this.usageList = usageList;
    return this;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest addUsageListItem(String usageListItem) {
    if (this.usageList == null) {
      this.usageList = new ArrayList<String>();
    }
    this.usageList.add(usageListItem);
    return this;
  }

   /**
   * Назначение
   * @return usageList
  **/
  @ApiModelProperty(value = "Назначение")
  public List<String> getUsageList() {
    return usageList;
  }

  public void setUsageList(List<String> usageList) {
    this.usageList = usageList;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest from(Integer from) {
    this.from = from;
    return this;
  }

   /**
   * Номер с которого начинаются товары - для постраничного вывода, по умолчанию с 0
   * @return from
  **/
  @ApiModelProperty(value = "Номер с которого начинаются товары - для постраничного вывода, по умолчанию с 0")
  public Integer getFrom() {
    return from;
  }

  public void setFrom(Integer from) {
    this.from = from;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Количество результатов на страницу, по-умолчанию 24
   * minimum: 1
   * maximum: 2147483647
   * @return count
  **/
  @ApiModelProperty(value = "Количество результатов на страницу, по-умолчанию 24")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest formFactor(Integer formFactor) {
    this.formFactor = formFactor;
    return this;
  }

   /**
   * Тип автомобиля, 0 - легковой, 1 - грузовой, 2 - все
   * @return formFactor
  **/
  @ApiModelProperty(value = "Тип автомобиля, 0 - легковой, 1 - грузовой, 2 - все")
  public Integer getFormFactor() {
    return formFactor;
  }

  public void setFormFactor(Integer formFactor) {
    this.formFactor = formFactor;
  }

  public OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest key(String key) {
    this.key = key;
    return this;
  }

   /**
   * Ключ доступа, строка
   * @return key
  **/
  @ApiModelProperty(required = true, value = "Ключ доступа, строка")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest = (OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest) o;
    return Objects.equals(this.isSale, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest.isSale) &&
        Objects.equals(this.rest, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest.rest) &&
        Objects.equals(this.manufacturers, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest.manufacturers) &&
        Objects.equals(this.diameterList, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest.diameterList) &&
        Objects.equals(this.frameSizeList, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest.frameSizeList) &&
        Objects.equals(this.widthList, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest.widthList) &&
        Objects.equals(this.axisTypeList, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest.axisTypeList) &&
        Objects.equals(this.seasonList, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest.seasonList) &&
        Objects.equals(this.usageList, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest.usageList) &&
        Objects.equals(this.from, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest.from) &&
        Objects.equals(this.count, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest.count) &&
        Objects.equals(this.formFactor, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest.formFactor) &&
        Objects.equals(this.key, omegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest.key);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isSale, rest, manufacturers, diameterList, frameSizeList, widthList, axisTypeList, seasonList, usageList, from, count, formFactor, key);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OmegaAPIAreasPublicModelsRequestModelsSearchCatalogGetTiresParametersRequest {\n");
    
    sb.append("    isSale: ").append(toIndentedString(isSale)).append("\n");
    sb.append("    rest: ").append(toIndentedString(rest)).append("\n");
    sb.append("    manufacturers: ").append(toIndentedString(manufacturers)).append("\n");
    sb.append("    diameterList: ").append(toIndentedString(diameterList)).append("\n");
    sb.append("    frameSizeList: ").append(toIndentedString(frameSizeList)).append("\n");
    sb.append("    widthList: ").append(toIndentedString(widthList)).append("\n");
    sb.append("    axisTypeList: ").append(toIndentedString(axisTypeList)).append("\n");
    sb.append("    seasonList: ").append(toIndentedString(seasonList)).append("\n");
    sb.append("    usageList: ").append(toIndentedString(usageList)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    formFactor: ").append(toIndentedString(formFactor)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


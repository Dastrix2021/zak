/*
 * Omega.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRestPublicWarehouseRestModel;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-12-27T17:23:48.058+02:00")
public class OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice {
  @SerializedName("Price")
  private Double price = null;

  @SerializedName("CustomerPrice")
  private Double customerPrice = null;

  @SerializedName("ArtId")
  private Long artId = null;

  @SerializedName("IsHaveRest")
  private Boolean isHaveRest = null;

  @SerializedName("AvailableWarehouses")
  private List<OmegaAPIAreasPublicModelsRestPublicWarehouseRestModel> availableWarehouses = null;

  @SerializedName("UnAvailableWarehouses")
  private List<OmegaAPIAreasPublicModelsRestPublicWarehouseRestModel> unAvailableWarehouses = null;

  public OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Розничная цена товара, число
   * @return price
  **/
  @ApiModelProperty(value = "Розничная цена товара, число")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }

  public OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice customerPrice(Double customerPrice) {
    this.customerPrice = customerPrice;
    return this;
  }

   /**
   * Цена товара для клиента, число
   * @return customerPrice
  **/
  @ApiModelProperty(value = "Цена товара для клиента, число")
  public Double getCustomerPrice() {
    return customerPrice;
  }

  public void setCustomerPrice(Double customerPrice) {
    this.customerPrice = customerPrice;
  }

  public OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice artId(Long artId) {
    this.artId = artId;
    return this;
  }

   /**
   * Уникальный идентификаторов товара
   * @return artId
  **/
  @ApiModelProperty(value = "Уникальный идентификаторов товара")
  public Long getArtId() {
    return artId;
  }

  public void setArtId(Long artId) {
    this.artId = artId;
  }

  public OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice isHaveRest(Boolean isHaveRest) {
    this.isHaveRest = isHaveRest;
    return this;
  }

   /**
   * Признак, есть ли остатки на складах
   * @return isHaveRest
  **/
  @ApiModelProperty(value = "Признак, есть ли остатки на складах")
  public Boolean getIsHaveRest() {
    return isHaveRest;
  }

  public void setIsHaveRest(Boolean isHaveRest) {
    this.isHaveRest = isHaveRest;
  }

  public OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice availableWarehouses(List<OmegaAPIAreasPublicModelsRestPublicWarehouseRestModel> availableWarehouses) {
    this.availableWarehouses = availableWarehouses;
    return this;
  }

  public OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice addAvailableWarehousesItem(OmegaAPIAreasPublicModelsRestPublicWarehouseRestModel availableWarehousesItem) {
    if (this.availableWarehouses == null) {
      this.availableWarehouses = new ArrayList<OmegaAPIAreasPublicModelsRestPublicWarehouseRestModel>();
    }
    this.availableWarehouses.add(availableWarehousesItem);
    return this;
  }

   /**
   * Get availableWarehouses
   * @return availableWarehouses
  **/
  @ApiModelProperty(value = "")
  public List<OmegaAPIAreasPublicModelsRestPublicWarehouseRestModel> getAvailableWarehouses() {
    return availableWarehouses;
  }

  public void setAvailableWarehouses(List<OmegaAPIAreasPublicModelsRestPublicWarehouseRestModel> availableWarehouses) {
    this.availableWarehouses = availableWarehouses;
  }

  public OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice unAvailableWarehouses(List<OmegaAPIAreasPublicModelsRestPublicWarehouseRestModel> unAvailableWarehouses) {
    this.unAvailableWarehouses = unAvailableWarehouses;
    return this;
  }

  public OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice addUnAvailableWarehousesItem(OmegaAPIAreasPublicModelsRestPublicWarehouseRestModel unAvailableWarehousesItem) {
    if (this.unAvailableWarehouses == null) {
      this.unAvailableWarehouses = new ArrayList<OmegaAPIAreasPublicModelsRestPublicWarehouseRestModel>();
    }
    this.unAvailableWarehouses.add(unAvailableWarehousesItem);
    return this;
  }

   /**
   * Get unAvailableWarehouses
   * @return unAvailableWarehouses
  **/
  @ApiModelProperty(value = "")
  public List<OmegaAPIAreasPublicModelsRestPublicWarehouseRestModel> getUnAvailableWarehouses() {
    return unAvailableWarehouses;
  }

  public void setUnAvailableWarehouses(List<OmegaAPIAreasPublicModelsRestPublicWarehouseRestModel> unAvailableWarehouses) {
    this.unAvailableWarehouses = unAvailableWarehouses;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice omegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice = (OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice) o;
    return Objects.equals(this.price, omegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice.price) &&
        Objects.equals(this.customerPrice, omegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice.customerPrice) &&
        Objects.equals(this.artId, omegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice.artId) &&
        Objects.equals(this.isHaveRest, omegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice.isHaveRest) &&
        Objects.equals(this.availableWarehouses, omegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice.availableWarehouses) &&
        Objects.equals(this.unAvailableWarehouses, omegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice.unAvailableWarehouses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(price, customerPrice, artId, isHaveRest, availableWarehouses, unAvailableWarehouses);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice {\n");
    
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    customerPrice: ").append(toIndentedString(customerPrice)).append("\n");
    sb.append("    artId: ").append(toIndentedString(artId)).append("\n");
    sb.append("    isHaveRest: ").append(toIndentedString(isHaveRest)).append("\n");
    sb.append("    availableWarehouses: ").append(toIndentedString(availableWarehouses)).append("\n");
    sb.append("    unAvailableWarehouses: ").append(toIndentedString(unAvailableWarehouses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


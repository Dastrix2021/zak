/*
 * Omega.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.OmegaAPIAreasPublicModelsPublicModel;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsClaimPublicClaimData;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsReponsesClaimReponse;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableClaimKind;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicClaimPhoto;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicContactForClaims;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIModelsKeyValueModel;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableSystemString;
import io.swagger.client.model.OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemDouble;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsClaimCheckClaimParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsClaimClaimDiscountParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsClaimCreateClaimParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsClaimDownloadRefundDocumentsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsClaimGetAddressesParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsClaimGetClaimsListParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsClaimGetKindClaimsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsClaimUploadClaimPhotoParametersRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PublicClaimsApi
 */
@Ignore
public class PublicClaimsApiTest {

    private final PublicClaimsApi api = new PublicClaimsApi();

    
    /**
     * Проверяет возможность создания претензии.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/checkClaimKind\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;225da8af-20a7-11e9-80cc-94f128aa9b4c\&quot;,      \&quot;KindId\&quot;: \&quot;БракУпаковки\&quot;,      \&quot;ProductId\&quot;:\&quot;f1eae727-9cfe-11e7-9628-e839351df20c\&quot;  }\&quot;  Использовать данный метод для каждого товара, на который собираються оформить претензию
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicClaimsCheckClaimKindTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsClaimCheckClaimParametersRequest model = null;
        OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableSystemString response = api.publicClaimsCheckClaimKind(model);

        // TODO: test validations
    }
    
    /**
     * Создает претензию по заданным параметрам.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/createClaim\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;  Тип претензии скрытый брак может иметь дополнительные поля тип объекта BaseClaimProduct - поля Vin (строка), CarMark (строка), CarModel (строка), YearVehicle (1000-9999)  Тип претензии явный брак может иметь дополнительные поля тип объекта BaseClaimProduct - поля ReadyForDiscount (0-1)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicClaimsCreateClaimTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsClaimCreateClaimParametersRequest model = null;
        OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsReponsesClaimReponse response = api.publicClaimsCreateClaim(model);

        // TODO: test validations
    }
    
    /**
     * Загрузить документы на возврат. Формат файла архив .ZIP
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/downloadRefundDocuments\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicClaimsDownloadRefundDocumentsTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsClaimDownloadRefundDocumentsParametersRequest model = null;
        byte[] response = api.publicClaimsDownloadRefundDocuments(model);

        // TODO: test validations
    }
    
    /**
     * Получает список адресов.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getAddresses\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;Kind\&quot;: 0  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicClaimsGetAddressesTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsClaimGetAddressesParametersRequest model = null;
        OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIModelsKeyValueModel response = api.publicClaimsGetAddresses(model);

        // TODO: test validations
    }
    
    /**
     * Возвращает журнал претензий.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getClaimsList\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicClaimsGetClaimsListTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsClaimGetClaimsListParametersRequest model = null;
        OmegaAPIAreasPublicModelsReponsesDefaultResponseOmegaAPIAreasPublicModelsClaimPublicClaimData response = api.publicClaimsGetClaimsList(model);

        // TODO: test validations
    }
    
    /**
     * Получает список контактных лиц.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getContacts\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicClaimsGetContactsTest() throws ApiException {
        OmegaAPIAreasPublicModelsPublicModel model = null;
        OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicContactForClaims response = api.publicClaimsGetContacts(model);

        // TODO: test validations
    }
    
    /**
     * Получает возможную скидку по товару в РН.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getDiscount\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ProductId\&quot;:\&quot;f1eae727-9cfe-11e7-9628-e839351df20c\&quot;,      \&quot;DocId\&quot;: \&quot;9d1267d3-9c5b-11e6-b23a-80c16e6b55ee\&quot;,      \&quot;TypeId\&quot;: \&quot;type\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicClaimsGetDiscountTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsClaimClaimDiscountParametersRequest model = null;
        OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemDouble response = api.publicClaimsGetDiscount(model);

        // TODO: test validations
    }
    
    /**
     * Получает список причин для возврата.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/getKindClaims\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ProductId\&quot;:\&quot;f1eae727-9cfe-11e7-9628-e839351df20c\&quot;,      \&quot;DocId\&quot;: \&quot;9d1267d3-9c5b-11e6-b23a-80c16e6b55ee\&quot;  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicClaimsGetKindClaimsTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsClaimGetKindClaimsParametersRequest model = null;
        OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableClaimKind response = api.publicClaimsGetKindClaims(model);

        // TODO: test validations
    }
    
    /**
     * Загружает фото, формат изображения должен быть JPEG (.jpg).
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/claims/uploadPhoto\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ProductId\&quot;: \&quot;\&quot;,      \&quot;Data\&quot;: \&quot;/SAFsDFsdaf\&quot;,      \&quot;FileName\&quot;: \&quot;Test.jpg\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicClaimsUploadPhotoTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsClaimUploadClaimPhotoParametersRequest model = null;
        OmegaAPIAreasPublicModelsReponsesDefaultResponseSystemCollectionsGenericIEnumerableOmegaAPIAreasPublicModelsClaimPublicClaimPhoto response = api.publicClaimsUploadPhoto(model);

        // TODO: test validations
    }
    
}

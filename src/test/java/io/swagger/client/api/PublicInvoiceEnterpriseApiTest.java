/*
 * Omega.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoicePagedInvoices;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoicePublicContract;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoicePublicContractSRO;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoicePublicCustomer;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoicePublicInvoice;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoicePublicReponseInvoice;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoicePublicWarehouse;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryAddressSettings;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryTownsSettings;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierShipmentSettings;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPlainPublicPlainShipmentSettings;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPublicShipmentType;
import io.swagger.client.model.OmegaAPIAreasPublicModelsInvoiceSettingsShipmentSelfDeliveryPublicSelfDeliveryShipmentSettings;
import io.swagger.client.model.OmegaAPIAreasPublicModelsPublicModel;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsGetListRestsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceAddInvoiceParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceAddProductInvoiceParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceCodInvoiceParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceDeleteInvoiceParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceDeleteItemFromInvoiceParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceGetAddressCourierDeliveryRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceGetContractSroParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceGetContractsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceGetPagedInvoicesParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceGetTownCourierDeliveryRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceGetWarehousesParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceMoveProductsParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceReadyInvoiceParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceReserveInvoiceNoteParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceReserveInvoiceParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceSetContractParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceSetCourierShipmentParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceSetCustomerParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceSetPlainShipmentParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceSetSelfDeliveryShipmentParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceSetWarehouseParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRequestModelsInvoiceUpdateProductsQuantityParametersRequest;
import io.swagger.client.model.OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PublicInvoiceEnterpriseApi
 */
@Ignore
public class PublicInvoiceEnterpriseApiTest {

    private final PublicInvoiceEnterpriseApi api = new PublicInvoiceEnterpriseApi();

    
    /**
     * Сохраняет новый счёт с стандартными настройками, и переносит в него товары из корзины.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/addInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseAddInvoiceTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceAddInvoiceParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePublicReponseInvoice response = api.publicInvoiceEnterpriseAddInvoice(model);

        // TODO: test validations
    }
    
    /**
     * Добавляет товары в указанный счет.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/addProductToInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;ProdId\&quot;: -84669,      \&quot;Count\&quot;: 1,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseAddProductToInvoiceTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceAddProductInvoiceParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePublicInvoice response = api.publicInvoiceEnterpriseAddProductToInvoice(model);

        // TODO: test validations
    }
    
    /**
     * Удаляет счет.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/deleteInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseDeleteInvoiceTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceDeleteInvoiceParametersRequest model = null;
        String response = api.publicInvoiceEnterpriseDeleteInvoice(model);

        // TODO: test validations
    }
    
    /**
     * Удаляет товар из счета
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/deleteItemFromInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseDeleteItemFromInvoiceTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceDeleteItemFromInvoiceParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePublicInvoice response = api.publicInvoiceEnterpriseDeleteItemFromInvoice(model);

        // TODO: test validations
    }
    
    /**
     * Получает список доступных складов с остатками по товарам из корзины.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getBasketRests\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseGetBasketRestsTest() throws ApiException {
        OmegaAPIAreasPublicModelsPublicModel model = null;
        List<OmegaAPIAreasPublicModelsInvoicePublicWarehouse> response = api.publicInvoiceEnterpriseGetBasketRests(model);

        // TODO: test validations
    }
    
    /**
     * Получает сумму разрешенной отгрузки.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getContractSRO\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseGetContractSROTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceGetContractSroParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePublicContractSRO response = api.publicInvoiceEnterpriseGetContractSRO(model);

        // TODO: test validations
    }
    
    /**
     * Получает список договоров клиента.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getContracts\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;CustomerId\&quot;: \&quot;5728e3fb-486f-11e6-80c3-005056a817fa\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseGetContractsTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceGetContractsParametersRequest model = null;
        List<OmegaAPIAreasPublicModelsInvoicePublicContract> response = api.publicInvoiceEnterpriseGetContracts(model);

        // TODO: test validations
    }
    
    /**
     * Получает список адресов отделения для определённого сервиса \&quot;Курьерской доставки\&quot;.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getCourierAddresses\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,      \&quot;DeliveryId\&quot;: \&quot;a0ed30f9-6fac-11e6-80c9-005056a83d22\&quot;,      \&quot;TownId\&quot;: \&quot;d4cf8a25-b59a-11e6-b23a-80c16e6b54ee\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseGetCourierAddressesTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceGetAddressCourierDeliveryRequest model = null;
        OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryAddressSettings response = api.publicInvoiceEnterpriseGetCourierAddresses(model);

        // TODO: test validations
    }
    
    /**
     * Получает настройки для \&quot;Курьерской доставки\&quot;.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getCourierDeliverySettings\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseGetCourierDeliverySettingsTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model = null;
        OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierShipmentSettings response = api.publicInvoiceEnterpriseGetCourierDeliverySettings(model);

        // TODO: test validations
    }
    
    /**
     * Получает список городов для определённого сервиса \&quot;Курьерской доставки\&quot;.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getCourierTowns\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,      \&quot;DeliveryId\&quot;: \&quot;a0ed30f9-6fac-11e6-80c9-005056a83d22\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseGetCourierTownsTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceGetTownCourierDeliveryRequest model = null;
        OmegaAPIAreasPublicModelsInvoiceSettingsShipmentCourierCourierDeliveryTownsSettings response = api.publicInvoiceEnterpriseGetCourierTowns(model);

        // TODO: test validations
    }
    
    /**
     * Получает список контрагентов доступных клиенту.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getCustomers\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseGetCustomersTest() throws ApiException {
        OmegaAPIAreasPublicModelsPublicModel model = null;
        List<OmegaAPIAreasPublicModelsInvoicePublicCustomer> response = api.publicInvoiceEnterpriseGetCustomers(model);

        // TODO: test validations
    }
    
    /**
     * Получает информацию о счёте.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;:\&quot;test\&quot;  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseGetInvoiceTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceReserveInvoiceParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePublicInvoice response = api.publicInvoiceEnterpriseGetInvoice(model);

        // TODO: test validations
    }
    
    /**
     * Получает список счетов клиента.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getListInvoice\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseGetListInvoiceTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceGetPagedInvoicesParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePagedInvoices response = api.publicInvoiceEnterpriseGetListInvoice(model);

        // TODO: test validations
    }
    
    /**
     * Получает список доступных настроек для \&quot;Плановой доставки\&quot;.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getPlainSettings\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseGetPlainInvoiceSettingsTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model = null;
        OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPlainPublicPlainShipmentSettings response = api.publicInvoiceEnterpriseGetPlainInvoiceSettings(model);

        // TODO: test validations
    }
    
    /**
     * Получает список складов с остатками по товару.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getRests\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;Rests\&quot;: [-68812],  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseGetRestsTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsGetListRestsParametersRequest model = null;
        List<OmegaAPIAreasPublicModelsRestPublicProductDetailedRestPrice> response = api.publicInvoiceEnterpriseGetRests(model);

        // TODO: test validations
    }
    
    /**
     * Получает список доступных настроек для \&quot;Самовывоза\&quot;.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getSelfDeliverySettings\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseGetSelfDeliverySettingsTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceGetInvoiceSettingsRequest model = null;
        OmegaAPIAreasPublicModelsInvoiceSettingsShipmentSelfDeliveryPublicSelfDeliveryShipmentSettings response = api.publicInvoiceEnterpriseGetSelfDeliverySettings(model);

        // TODO: test validations
    }
    
    /**
     * Получает список видов доставки.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getShipmentTypes\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseGetShipmentTypesTest() throws ApiException {
        OmegaAPIAreasPublicModelsPublicModel model = null;
        List<OmegaAPIAreasPublicModelsInvoiceSettingsShipmentPublicShipmentType> response = api.publicInvoiceEnterpriseGetShipmentTypes(model);

        // TODO: test validations
    }
    
    /**
     * Получает список складов доступных контрагенту.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/getWarehouses\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;CustomerId\&quot;: \&quot;5728e3fb-486f-11e6-80c3-005056a817fa\&quot;,      \&quot;ShipmentTypeId\&quot;: \&quot;Доставка\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseGetWarehousesTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceGetWarehousesParametersRequest model = null;
        List<OmegaAPIAreasPublicModelsInvoicePublicWarehouse> response = api.publicInvoiceEnterpriseGetWarehouses(model);

        // TODO: test validations
    }
    
    /**
     * Перемещает товары с корзины в указанный счет.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/moveProductsFromBasketToInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseMoveProductsFromBasketToInvoiceTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceMoveProductsParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePublicInvoice response = api.publicInvoiceEnterpriseMoveProductsFromBasketToInvoice(model);

        // TODO: test validations
    }
    
    /**
     * Отгружает ранее зарезервированный счет.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/readyInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseReadyInvoiceTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceReadyInvoiceParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePublicInvoice response = api.publicInvoiceEnterpriseReadyInvoice(model);

        // TODO: test validations
    }
    
    /**
     * Резервирует ранее созданный счёт.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/reserveInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseReserveInvoiceTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceReserveInvoiceNoteParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePublicInvoice response = api.publicInvoiceEnterpriseReserveInvoice(model);

        // TODO: test validations
    }
    
    /**
     * Редактирует ранее созданный счёт в счет с наложенным платежом.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/codInvoice\&quot; -d \&quot;  {      \&quot;DocId\&quot;: \&quot;Test\&quot;,      \&quot;SummCod\&quot;: \&quot;0\&quot;,       \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseReserveInvoice_0Test() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceCodInvoiceParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePublicInvoice response = api.publicInvoiceEnterpriseReserveInvoice_0(model);

        // TODO: test validations
    }
    
    /**
     * Выбирает настройки для \&quot;Курьерской доставки\&quot;.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setCourierShipment\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;4422a207-1318-11e9-80c8-80c16e6b54ee\&quot;,      \&quot;DeliveryTypeId\&quot;: \&quot;НаСкладКурьерскойСлужбы\&quot;,      \&quot;ServiceTypeId\&quot;: \&quot;bee7e67e-6fac-11e6-80c9-005056a83d22\&quot;,      \&quot;TownId\&quot;: \&quot;e13e1dbb-b59a-11e6-b23a-80c16e6b54ee\&quot;,      \&quot;AddressId\&quot;: \&quot;c5ab8322-9705-11e8-80c9-94f128aa9b48\&quot;,      \&quot;ContactPersonId\&quot;: \&quot;cee670f1-5596-11e7-9b57-984be1788882\&quot;  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseSetCourierShipmentTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceSetCourierShipmentParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePublicInvoice response = api.publicInvoiceEnterpriseSetCourierShipment(model);

        // TODO: test validations
    }
    
    /**
     * Выбирает указанный договор в счете.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setInvoiceContract\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;ContractId\&quot;: \&quot;10c9069c-0e82-11e9-80c8-80c16e6b54ee\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseSetInvoiceContractTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceSetContractParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePublicInvoice response = api.publicInvoiceEnterpriseSetInvoiceContract(model);

        // TODO: test validations
    }
    
    /**
     * Выбирает указанного контрагента в счете.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setInvoiceCustomer\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;CustomerId\&quot;: \&quot;5728e3fb-486f-11e6-80c3-005056a817fa\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseSetInvoiceCustomerTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceSetCustomerParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePublicInvoice response = api.publicInvoiceEnterpriseSetInvoiceCustomer(model);

        // TODO: test validations
    }
    
    /**
     * Выбирает указанный склад в счете.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setInvoiceWarehouse\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;WarehouseId\&quot; &#x3D; \&quot;138b4842-483f-11e6-80c3-005056a817fa\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseSetInvoiceWarehouseTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceSetWarehouseParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePublicInvoice response = api.publicInvoiceEnterpriseSetInvoiceWarehouse(model);

        // TODO: test validations
    }
    
    /**
     * Выбирает настройки для \&quot;Плановой доставки\&quot; в счете.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setPlainShipment\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,      \&quot;AddressId\&quot;: \&quot;76b0cc26-7c1e-11e6-80c9-005056a83d22\&quot;,      \&quot;RouteId\&quot;: \&quot;08ee828a-05ae-11e8-beca-1458d05388cc\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseSetPlainShipmentTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceSetPlainShipmentParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePublicInvoice response = api.publicInvoiceEnterpriseSetPlainShipment(model);

        // TODO: test validations
    }
    
    /**
     * Выбирает настройки для \&quot;Самовывоза\&quot; в счете.
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/setSelfDeliveryShipment\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;,      \&quot;DocId\&quot;: \&quot;test\&quot;,  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseSetSelfDeliveryShipmentTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceSetSelfDeliveryShipmentParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePublicInvoice response = api.publicInvoiceEnterpriseSetSelfDeliveryShipment(model);

        // TODO: test validations
    }
    
    /**
     * Изменяет количество товаров в счете
     *
     * curl -H \&quot;Content-Type: application/json\&quot; -XPOST \&quot;https://public.omega.page/public/api/v1.0/invoice8/updateProductsQuantity\&quot; -d \&quot;  {      \&quot;Key\&quot;: \&quot;RQzSCdY99JgV0kMtSYx0KTcE9bdWmhai\&quot;  }\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInvoiceEnterpriseUpdateProductsQuantityTest() throws ApiException {
        OmegaAPIAreasPublicModelsRequestModelsInvoiceUpdateProductsQuantityParametersRequest model = null;
        OmegaAPIAreasPublicModelsInvoicePublicInvoice response = api.publicInvoiceEnterpriseUpdateProductsQuantity(model);

        // TODO: test validations
    }
    
}
